diff -ur stock-kernel/.config linux/.config
--- stock-kernel/.config	2013-03-02 01:34:48.300000888 +0100
+++ linux/.config	2013-03-09 16:39:53.219976254 +0100
@@ -0,0 +1,3354 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 3.1.10 Kernel Configuration
+#
+CONFIG_ARM=y
+CONFIG_HAVE_PWM=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_SCHED_CLOCK=y
+CONFIG_GENERIC_GPIO=y
+# CONFIG_ARCH_USES_GETTIMEOFFSET is not set
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_KTIME_SCALAR=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_LOCKBREAK=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_ARCH_HAS_CPU_IDLE_WAIT=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_FIQ=y
+CONFIG_ARCH_PROVIDES_UDELAY=y
+CONFIG_VECTORS_BASE=0xffff0000
+# CONFIG_ARM_PATCH_PHYS_VIRT is not set
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_HAVE_IRQ_WORK=y
+CONFIG_IRQ_WORK=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_POSIX_MQUEUE is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_FHANDLE is not set
+# CONFIG_TASKSTATS is not set
+CONFIG_AUDIT=y
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_HAVE_SPARSE_IRQ=y
+CONFIG_GENERIC_IRQ_SHOW=y
+# CONFIG_SPARSE_IRQ is not set
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_PREEMPT_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_RCU_BOOST is not set
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_CGROUPS=y
+CONFIG_CGROUP_DEBUG=y
+CONFIG_CGROUP_FREEZER=y
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CPUSETS is not set
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+# CONFIG_CGROUP_MEM_RES_CTLR is not set
+# CONFIG_CGROUP_PERF is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_BLK_CGROUP is not set
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_IPC_NS=y
+CONFIG_USER_NS=y
+CONFIG_PID_NS=y
+CONFIG_NET_NS=y
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_SYSFS_DEPRECATED is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_PANIC_TIMEOUT=10
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+# CONFIG_SYSCTL_SYSCALL is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+# CONFIG_ELF_CORE is not set
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_ASHMEM=y
+CONFIG_AIO=y
+CONFIG_EMBEDDED=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_PERF_COUNTERS is not set
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_PCI_QUIRKS=y
+CONFIG_COMPAT_BRK=y
+CONFIG_SLAB=y
+# CONFIG_SLUB is not set
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=y
+CONFIG_HAVE_OPROFILE=y
+# CONFIG_KPROBES is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+# CONFIG_MODVERSIONS is not set
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+# CONFIG_BLK_DEV_BSG is not set
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+# CONFIG_IOSCHED_DEADLINE is not set
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_READ_UNLOCK is not set
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQ is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_WRITE_UNLOCK is not set
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCMRING is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_CNS3XXX is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_PRIMA2 is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_MXS is not set
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_H720X is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP23XX is not set
+# CONFIG_ARCH_IXP2000 is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_LPC32XX is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_NUC93X is not set
+CONFIG_ARCH_TEGRA=y
+# CONFIG_ARCH_PNX4008 is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C2410 is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P64X0 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_EXYNOS4 is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_TCC_926 is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_NOMADIK is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP is not set
+# CONFIG_PLAT_SPEAR is not set
+# CONFIG_ARCH_VT8500 is not set
+# CONFIG_ARCH_ZYNQ is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+
+#
+# System MMU
+#
+
+#
+# NVIDIA Tegra options
+#
+CONFIG_ARCH_TEGRA_3x_SOC=y
+CONFIG_ARCH_TEGRA_HAS_DUAL_3D=y
+CONFIG_ARCH_TEGRA_HAS_DUAL_CPU_CLUSTERS=y
+CONFIG_ARCH_TEGRA_HAS_PCIE=y
+CONFIG_ARCH_TEGRA_HAS_SATA=y
+CONFIG_TEGRA_PCI=y
+
+#
+# Tegra board type
+#
+# CONFIG_MACH_TEGRA_DT is not set
+# CONFIG_MACH_ARUBA is not set
+CONFIG_MACH_CARDHU=y
+# CONFIG_MACH_P1852 is not set
+# CONFIG_MACH_TEGRA_ENTERPRISE is not set
+# CONFIG_MACH_KAI is not set
+CONFIG_TEGRA_SILICON_PLATFORM=y
+# CONFIG_TEGRA_SIMULATION_PLATFORM is not set
+# CONFIG_TEGRA_FPGA_PLATFORM is not set
+CONFIG_TEGRA_DEBUG_UART_NONE=y
+CONFIG_TEGRA_SYSTEM_DMA=y
+CONFIG_TEGRA_PWM=y
+CONFIG_TEGRA_FIQ_DEBUGGER=y
+# CONFIG_TEGRA_CARDHU_DSI is not set
+CONFIG_TEGRA_EMC_SCALING_ENABLE=y
+CONFIG_TEGRA_CPU_DVFS=y
+CONFIG_TEGRA_CORE_DVFS=y
+CONFIG_TEGRA_IOVMM_SMMU=y
+# CONFIG_TEGRA_IOVMM_SMMU_SYSFS is not set
+CONFIG_TEGRA_IOVMM=y
+CONFIG_TEGRA_AVP_KERNEL_ON_SMMU=y
+CONFIG_TEGRA_THERMAL_THROTTLE=y
+# CONFIG_DEBUG_ASUS is not set
+# CONFIG_WIFI_CONTROL_FUNC is not set
+CONFIG_TEGRA_CLOCK_DEBUG_WRITE=y
+CONFIG_TEGRA_CLUSTER_CONTROL=y
+CONFIG_TEGRA_AUTO_HOTPLUG=y
+CONFIG_TEGRA_MC_EARLY_ACK=y
+CONFIG_TEGRA_MC_PROFILE=y
+CONFIG_TEGRA_EDP_LIMITS=y
+CONFIG_TEGRA_EMC_TO_DDR_CLOCK=1
+# CONFIG_TEGRA_CONVSERVATIVE_GOV_ON_EARLYSUPSEND is not set
+CONFIG_USB_HOTPLUG=y
+CONFIG_TEGRA_GADGET_BOOST_CPU_FREQ=0
+CONFIG_TEGRA_DYNAMIC_PWRDET=y
+CONFIG_TEGRA_EDP_EXACT_FREQ=y
+CONFIG_TEGRA_USB_MODEM_POWER=y
+CONFIG_TEGRA_BB_XMM_POWER=y
+# CONFIG_TEGRA_BB_XMM_POWER2 is not set
+CONFIG_TEGRA_PLLM_RESTRICTED=y
+# CONFIG_TEGRA_WDT_RECOVERY is not set
+CONFIG_TEGRA_LP2_ARM_TWD=y
+# CONFIG_TEGRA_SLOW_CSITE is not set
+# CONFIG_TEGRA_PREINIT_CLOCKS is not set
+# CONFIG_TEGRA_PREPOWER_WIFI is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_SWP_EMULATE=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_OUTER_CACHE=y
+CONFIG_OUTER_CACHE_SYNC=y
+CONFIG_CACHE_L2X0=y
+CONFIG_CACHE_PL310=y
+CONFIG_ARM_L1_CACHE_SHIFT=5
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+# CONFIG_NON_ALIASED_COHERENT_MEM is not set
+CONFIG_ARM_SAVE_DEBUG_CONTEXT=y
+CONFIG_CPA=y
+CONFIG_CPU_HAS_PMU=y
+# CONFIG_ARM_ERRATA_430973 is not set
+# CONFIG_ARM_ERRATA_458693 is not set
+# CONFIG_ARM_ERRATA_460075 is not set
+# CONFIG_ARM_ERRATA_716044 is not set
+CONFIG_ARM_ERRATA_742230=y
+# CONFIG_ARM_ERRATA_742231 is not set
+# CONFIG_PL310_ERRATA_588369 is not set
+# CONFIG_ARM_ERRATA_720789 is not set
+# CONFIG_PL310_ERRATA_727915 is not set
+CONFIG_ARM_ERRATA_743622=y
+CONFIG_ARM_ERRATA_751472=y
+# CONFIG_ARM_ERRATA_753970 is not set
+CONFIG_ARM_ERRATA_754322=y
+# CONFIG_ARM_ERRATA_754327 is not set
+CONFIG_ARM_ERRATA_764369=y
+# CONFIG_ARM_ERRATA_720791 is not set
+CONFIG_ARM_ERRATA_752520=y
+# CONFIG_PL310_ERRATA_769419 is not set
+CONFIG_ARM_GIC=y
+CONFIG_FIQ_GLUE=y
+CONFIG_FIQ_DEBUGGER=y
+# CONFIG_FIQ_DEBUGGER_NO_SLEEP is not set
+# CONFIG_FIQ_DEBUGGER_WAKEUP_IRQ_ALWAYS_ON is not set
+# CONFIG_FIQ_DEBUGGER_CONSOLE is not set
+CONFIG_GIC_SET_MULTIPLE_CPUS=y
+
+#
+# Bus support
+#
+CONFIG_PCI=y
+CONFIG_PCI_SYSCALL=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+# CONFIG_PCI_DEBUG is not set
+# CONFIG_PCI_STUB is not set
+# CONFIG_PCI_IOV is not set
+CONFIG_PCIEPORTBUS=y
+CONFIG_PCIEAER=y
+# CONFIG_PCIE_ECRC is not set
+# CONFIG_PCIEAER_INJECT is not set
+CONFIG_PCIEASPM=y
+# CONFIG_PCIEASPM_DEBUG is not set
+# CONFIG_PCIEASPM_DEFAULT is not set
+CONFIG_PCIEASPM_POWERSAVE=y
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_SMP=y
+CONFIG_SMP_ON_UP=y
+CONFIG_HAVE_ARM_SCU=y
+CONFIG_HAVE_ARM_TWD=y
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_TASK_SIZE_3G_LESS_16M=y
+# CONFIG_TASK_SIZE_3G_LESS_24M is not set
+CONFIG_TASK_SIZE=0xBF000000
+CONFIG_NR_CPUS=4
+CONFIG_HOTPLUG_CPU=y
+CONFIG_LOCAL_TIMERS=y
+CONFIG_ARCH_NR_GPIO=512
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_HZ=100
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+CONFIG_HAVE_ARCH_PFN_VALID=y
+CONFIG_HIGHMEM=y
+# CONFIG_HIGHPTE is not set
+CONFIG_HW_PERF_EVENTS=y
+CONFIG_ARCH_HAS_SUSPEND_PAGETABLE=y
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_HAVE_MEMBLOCK=y
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+# CONFIG_COMPACTION is not set
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=0
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+# CONFIG_CLEANCACHE is not set
+CONFIG_FORCE_MAX_ZONEORDER=11
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+# CONFIG_SECCOMP is not set
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+CONFIG_ARM_FLUSH_CONSOLE_ON_RESTART=y
+
+#
+# Boot options
+#
+# CONFIG_USE_OF is not set
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+CONFIG_CMDLINE="tegra_wdt.heartbeat=30"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+CONFIG_CMDLINE_EXTEND=y
+# CONFIG_CMDLINE_FORCE is not set
+# CONFIG_XIP_KERNEL is not set
+CONFIG_KEXEC=y
+CONFIG_ATAGS_PROC=y
+CONFIG_KEXEC_HARDBOOT=y
+CONFIG_CRASH_DUMP=y
+# CONFIG_AUTO_ZRELADDR is not set
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_INTERACTIVE is not set
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+
+#
+# ARM CPU frequency scaling drivers
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+
+#
+# CPUQUIET Framework
+#
+# CONFIG_CPUQUIET_FRAMEWORK is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_HAVE_AOUT=y
+# CONFIG_BINFMT_AOUT is not set
+# CONFIG_BINFMT_MISC is not set
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HAS_WAKELOCK=y
+CONFIG_HAS_EARLYSUSPEND=y
+CONFIG_WAKELOCK=y
+CONFIG_WAKELOCK_STAT=y
+CONFIG_USER_WAKELOCK=y
+CONFIG_EARLYSUSPEND=y
+# CONFIG_NO_USER_SPACE_SCREEN_ACCESS_CONTROL is not set
+# CONFIG_CONSOLE_EARLYSUSPEND is not set
+CONFIG_FB_EARLYSUSPEND=y
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+CONFIG_PM_DEBUG=y
+# CONFIG_PM_ADVANCED_DEBUG is not set
+# CONFIG_PM_TEST_SUSPEND is not set
+CONFIG_CAN_PM_TRACE=y
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_CLK=y
+CONFIG_SUSPEND_TIME=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+# CONFIG_XFRM_USER is not set
+# CONFIG_XFRM_SUB_POLICY is not set
+# CONFIG_XFRM_MIGRATE is not set
+# CONFIG_XFRM_STATISTICS is not set
+CONFIG_XFRM_IPCOMP=y
+CONFIG_NET_KEY=y
+# CONFIG_NET_KEY_MIGRATE is not set
+CONFIG_INET=y
+# CONFIG_IP_MULTICAST is not set
+CONFIG_IP_ADVANCED_ROUTER=y
+# CONFIG_IP_FIB_TRIE_STATS is not set
+CONFIG_IP_MULTIPLE_TABLES=y
+# CONFIG_IP_ROUTE_MULTIPATH is not set
+# CONFIG_IP_ROUTE_VERBOSE is not set
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE_DEMUX is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_INET_AH is not set
+CONFIG_INET_ESP=y
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+# CONFIG_INET_XFRM_MODE_BEET is not set
+# CONFIG_INET_LRO is not set
+# CONFIG_INET_DIAG is not set
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+# CONFIG_IPV6_ROUTE_INFO is not set
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=y
+CONFIG_INET6_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+# CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=y
+CONFIG_IPV6_MULTIPLE_TABLES=y
+# CONFIG_IPV6_SUBTREES is not set
+# CONFIG_IPV6_MROUTE is not set
+CONFIG_ANDROID_PARANOID_NETWORK=y
+CONFIG_NET_ACTIVITY_STATS=y
+# CONFIG_NETWORK_SECMARK is not set
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+CONFIG_NETFILTER_NETLINK_QUEUE=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMESTAMP is not set
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_GRE=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_BROADCAST=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+# CONFIG_NF_CONNTRACK_SNMP is not set
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CONNTRACK_TFTP=y
+# CONFIG_NF_CT_NETLINK is not set
+CONFIG_NETFILTER_TPROXY=y
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=y
+
+#
+# Xtables targets
+#
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_NETFILTER_XT_TARGET_CHECKSUM is not set
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+# CONFIG_NETFILTER_XT_TARGET_CT is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_IDLETIMER is not set
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+# CONFIG_NETFILTER_XT_TARGET_NOTRACK is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+CONFIG_NETFILTER_XT_TARGET_TPROXY=y
+CONFIG_NETFILTER_XT_TARGET_TRACE=y
+# CONFIG_NETFILTER_XT_TARGET_TCPMSS is not set
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+# CONFIG_NETFILTER_XT_MATCH_ADDRTYPE is not set
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+# CONFIG_NETFILTER_XT_MATCH_CPU is not set
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DEVGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_HL=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+# CONFIG_NETFILTER_XT_MATCH_MULTIPORT is not set
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+# CONFIG_NETFILTER_XT_MATCH_OWNER is not set
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QTAGUID=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+# CONFIG_IP_NF_QUEUE is not set
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_TARGET_REJECT_SKERR=y
+CONFIG_IP_NF_TARGET_LOG=y
+# CONFIG_IP_NF_TARGET_ULOG is not set
+CONFIG_NF_NAT=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+CONFIG_NF_NAT_PROTO_DCCP=y
+CONFIG_NF_NAT_PROTO_GRE=y
+CONFIG_NF_NAT_PROTO_UDPLITE=y
+CONFIG_NF_NAT_PROTO_SCTP=y
+CONFIG_NF_NAT_FTP=y
+CONFIG_NF_NAT_IRC=y
+CONFIG_NF_NAT_TFTP=y
+CONFIG_NF_NAT_AMANDA=y
+CONFIG_NF_NAT_PPTP=y
+CONFIG_NF_NAT_H323=y
+CONFIG_NF_NAT_SIP=y
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+CONFIG_IP_NF_RAW=y
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=y
+CONFIG_NF_CONNTRACK_IPV6=y
+# CONFIG_IP6_NF_QUEUE is not set
+CONFIG_IP6_NF_IPTABLES=y
+# CONFIG_IP6_NF_MATCH_AH is not set
+# CONFIG_IP6_NF_MATCH_EUI64 is not set
+# CONFIG_IP6_NF_MATCH_FRAG is not set
+# CONFIG_IP6_NF_MATCH_OPTS is not set
+# CONFIG_IP6_NF_MATCH_HL is not set
+# CONFIG_IP6_NF_MATCH_IPV6HEADER is not set
+# CONFIG_IP6_NF_MATCH_MH is not set
+# CONFIG_IP6_NF_MATCH_RT is not set
+# CONFIG_IP6_NF_TARGET_HL is not set
+CONFIG_IP6_NF_TARGET_LOG=y
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
+CONFIG_IP6_NF_MANGLE=y
+CONFIG_IP6_NF_RAW=y
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+# CONFIG_BRIDGE is not set
+# CONFIG_NET_DSA is not set
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+CONFIG_NET_SCH_HTB=y
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
+# CONFIG_NET_SCH_MQPRIO is not set
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+CONFIG_NET_SCH_INGRESS=y
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+CONFIG_NET_CLS_U32=y
+# CONFIG_CLS_U32_PERF is not set
+# CONFIG_CLS_U32_MARK is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+# CONFIG_NET_EMATCH_CMP is not set
+# CONFIG_NET_EMATCH_NBYTE is not set
+CONFIG_NET_EMATCH_U32=y
+# CONFIG_NET_EMATCH_META is not set
+# CONFIG_NET_EMATCH_TEXT is not set
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=y
+CONFIG_NET_ACT_GACT=y
+# CONFIG_GACT_PROB is not set
+CONFIG_NET_ACT_MIRRED=y
+# CONFIG_NET_ACT_IPT is not set
+# CONFIG_NET_ACT_NAT is not set
+# CONFIG_NET_ACT_PEDIT is not set
+# CONFIG_NET_ACT_SIMP is not set
+# CONFIG_NET_ACT_SKBEDIT is not set
+# CONFIG_NET_ACT_CSUM is not set
+# CONFIG_NET_CLS_IND is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+CONFIG_DNS_RESOLVER=y
+# CONFIG_BATMAN_ADV is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_DROP_MONITOR is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+CONFIG_BT=y
+CONFIG_BT_L2CAP=y
+CONFIG_BT_SCO=y
+CONFIG_BT_RFCOMM=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=y
+# CONFIG_BT_BNEP_MC_FILTER is not set
+# CONFIG_BT_BNEP_PROTO_FILTER is not set
+CONFIG_BT_HIDP=y
+
+#
+# Bluetooth device drivers
+#
+# CONFIG_BT_HCIBTUSB is not set
+# CONFIG_BT_HCIBTSDIO is not set
+CONFIG_BT_HCIUART=y
+CONFIG_BT_HCIUART_H4=y
+# CONFIG_BT_HCIUART_BCSP is not set
+# CONFIG_BT_HCIUART_ATH3K is not set
+CONFIG_BT_HCIUART_LL=y
+# CONFIG_BT_HCIBCM203X is not set
+CONFIG_BT_BLUESLEEP=y
+# CONFIG_BT_TIBLUESLEEP is not set
+# CONFIG_BT_HCIBPA10X is not set
+# CONFIG_BT_HCIBFUSB is not set
+# CONFIG_BT_HCIVHCI is not set
+# CONFIG_BT_MRVL is not set
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_PRIV=y
+CONFIG_CFG80211=m
+CONFIG_NL80211_TESTMODE=y
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+# CONFIG_CFG80211_INTERNAL_REGDB is not set
+CONFIG_CFG80211_WEXT=y
+CONFIG_WIRELESS_EXT_SYSFS=y
+# CONFIG_LIB80211 is not set
+# CONFIG_CFG80211_ALLOW_RECONNECT is not set
+CONFIG_MAC80211=m
+CONFIG_MAC80211_HAS_RC=y
+# CONFIG_MAC80211_RC_PID is not set
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+# CONFIG_MAC80211_MESH is not set
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG_MENU is not set
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_PM=y
+# CONFIG_RFKILL_INPUT is not set
+# CONFIG_RFKILL_REGULATOR is not set
+CONFIG_RFKILL_GPIO=y
+# CONFIG_NET_9P is not set
+CONFIG_CAIF=y
+# CONFIG_CAIF_DEBUG is not set
+CONFIG_CAIF_NETDEV=y
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+# CONFIG_FIRMWARE_IN_KERNEL is not set
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_SYS_HYPERVISOR is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+# CONFIG_DMA_SHARED_BUFFER is not set
+# CONFIG_CONNECTOR is not set
+# CONFIG_MTD is not set
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_CPQ_DA is not set
+# CONFIG_BLK_CPQ_CISS_DA is not set
+# CONFIG_BLK_DEV_DAC960 is not set
+# CONFIG_BLK_DEV_UMEM is not set
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+
+#
+# DRBD disabled because PROC_FS, INET or CONNECTOR not selected
+#
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_SX8 is not set
+# CONFIG_BLK_DEV_UB is not set
+# CONFIG_BLK_DEV_RAM is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+# CONFIG_BLK_DEV_RBD is not set
+# CONFIG_SENSORS_LIS3LV02D is not set
+CONFIG_MISC_DEVICES=y
+CONFIG_AD525X_DPOT=y
+CONFIG_AD525X_DPOT_I2C=y
+# CONFIG_PHANTOM is not set
+# CONFIG_INTEL_MID_PTI is not set
+# CONFIG_SGI_IOC4 is not set
+# CONFIG_TIFM_CORE is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_HP_ILO is not set
+CONFIG_APDS9802ALS=y
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_SENSORS_AK8975 is not set
+CONFIG_SENSORS_NCT1008=y
+# CONFIG_DS1682 is not set
+CONFIG_UID_STAT=y
+# CONFIG_BMP085 is not set
+# CONFIG_PCH_PHUB is not set
+# CONFIG_USB_SWITCH_FSA9480 is not set
+# CONFIG_WL127X_RFKILL is not set
+# CONFIG_APANIC is not set
+# CONFIG_BCM4329_RFKILL is not set
+CONFIG_TEGRA_CRYPTO_DEV=y
+CONFIG_MAX1749_VIBRATOR=y
+# CONFIG_THERM_EST is not set
+CONFIG_KERNEL_RAMDUMP=y
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+CONFIG_EEPROM_AT24=y
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+CONFIG_EEPROM_93CX6=m
+# CONFIG_CB710_CORE is not set
+# CONFIG_IWMC3200TOP is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+# CONFIG_ST_GPS is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+CONFIG_MPU_SENSORS_TIMERIRQ=y
+CONFIG_INV_SENSORS=y
+CONFIG_MPU_SENSORS_MPU3050=y
+# CONFIG_MPU_SENSORS_MPU6050A2 is not set
+# CONFIG_MPU_SENSORS_MPU6050B1 is not set
+CONFIG_MPU_SENSORS_MPU3050_GYRO=y
+CONFIG_INV_SENSORS_ACCELEROMETERS=y
+# CONFIG_MPU_SENSORS_ADXL34X is not set
+# CONFIG_MPU_SENSORS_BMA222 is not set
+# CONFIG_MPU_SENSORS_BMA150 is not set
+# CONFIG_MPU_SENSORS_BMA250 is not set
+# CONFIG_MPU_SENSORS_KXSD9 is not set
+CONFIG_MPU_SENSORS_KXTF9=y
+# CONFIG_MPU_SENSORS_LIS331DLH is not set
+# CONFIG_MPU_SENSORS_LIS3DH is not set
+# CONFIG_MPU_SENSORS_LSM303DLX_A is not set
+# CONFIG_MPU_SENSORS_MMA8450 is not set
+# CONFIG_MPU_SENSORS_MMA845X is not set
+CONFIG_INV_SENSORS_COMPASS=y
+# CONFIG_MPU_SENSORS_AK8975 is not set
+# CONFIG_MPU_SENSORS_AK8972 is not set
+# CONFIG_MPU_SENSORS_MMC314X is not set
+# CONFIG_MPU_SENSORS_AMI30X is not set
+CONFIG_MPU_SENSORS_AMI306=y
+# CONFIG_MPU_SENSORS_HMC5883 is not set
+# CONFIG_MPU_SENSORS_LSM303DLX_M is not set
+# CONFIG_MPU_SENSORS_MMC314XMS is not set
+# CONFIG_MPU_SENSORS_YAS530 is not set
+# CONFIG_MPU_SENSORS_HSCDTD002B is not set
+# CONFIG_MPU_SENSORS_HSCDTD004A is not set
+CONFIG_INV_SENSORS_PRESSURE=y
+# CONFIG_MPU_SENSORS_BMA085 is not set
+# CONFIG_MPU_USERSPACE_DEBUG is not set
+CONFIG_TEGRA_BB_SUPPORT=y
+CONFIG_TEGRA_BB_POWER=y
+CONFIG_TEGRA_BB_M7400=y
+# CONFIG_TEGRA_CEC_SUPPORT is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+# CONFIG_SCSI_TGT is not set
+# CONFIG_SCSI_NETLINK is not set
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+# CONFIG_SCSI_SCAN_ASYNC is not set
+# CONFIG_SCSI_WAIT_SCAN is not set
+
+#
+# SCSI Transports
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_ISCSI_BOOT_SYSFS is not set
+# CONFIG_SCSI_CXGB3_ISCSI is not set
+# CONFIG_SCSI_CXGB4_ISCSI is not set
+# CONFIG_SCSI_BNX2_ISCSI is not set
+# CONFIG_SCSI_BNX2X_FCOE is not set
+# CONFIG_BE2ISCSI is not set
+# CONFIG_BLK_DEV_3W_XXXX_RAID is not set
+# CONFIG_SCSI_HPSA is not set
+# CONFIG_SCSI_3W_9XXX is not set
+# CONFIG_SCSI_3W_SAS is not set
+# CONFIG_SCSI_ACARD is not set
+# CONFIG_SCSI_AACRAID is not set
+# CONFIG_SCSI_AIC7XXX is not set
+# CONFIG_SCSI_AIC7XXX_OLD is not set
+# CONFIG_SCSI_AIC79XX is not set
+# CONFIG_SCSI_AIC94XX is not set
+# CONFIG_SCSI_MVSAS is not set
+# CONFIG_SCSI_DPT_I2O is not set
+# CONFIG_SCSI_ADVANSYS is not set
+# CONFIG_SCSI_ARCMSR is not set
+# CONFIG_MEGARAID_NEWGEN is not set
+# CONFIG_MEGARAID_LEGACY is not set
+# CONFIG_MEGARAID_SAS is not set
+# CONFIG_SCSI_MPT2SAS is not set
+# CONFIG_SCSI_HPTIOP is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_FCOE is not set
+# CONFIG_SCSI_DMX3191D is not set
+# CONFIG_SCSI_FUTURE_DOMAIN is not set
+# CONFIG_SCSI_IPS is not set
+# CONFIG_SCSI_INITIO is not set
+# CONFIG_SCSI_INIA100 is not set
+# CONFIG_SCSI_STEX is not set
+# CONFIG_SCSI_SYM53C8XX_2 is not set
+# CONFIG_SCSI_QLOGIC_1280 is not set
+# CONFIG_SCSI_QLA_FC is not set
+# CONFIG_SCSI_QLA_ISCSI is not set
+# CONFIG_SCSI_LPFC is not set
+# CONFIG_SCSI_DC395x is not set
+# CONFIG_SCSI_DC390T is not set
+# CONFIG_SCSI_NSP32 is not set
+# CONFIG_SCSI_DEBUG is not set
+# CONFIG_SCSI_PMCRAID is not set
+# CONFIG_SCSI_PM8001 is not set
+# CONFIG_SCSI_SRP is not set
+# CONFIG_SCSI_BFA_FC is not set
+# CONFIG_SCSI_DH is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=y
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_RAID is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_DELAY is not set
+CONFIG_DM_UEVENT=y
+# CONFIG_DM_FLAKEY is not set
+# CONFIG_TARGET_CORE is not set
+# CONFIG_FUSION is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+# CONFIG_FIREWIRE_NOSY is not set
+# CONFIG_I2O is not set
+CONFIG_NETDEVICES=y
+# CONFIG_IFB is not set
+CONFIG_DUMMY=y
+# CONFIG_BONDING is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_EQUALIZER is not set
+CONFIG_TUN=y
+# CONFIG_VETH is not set
+# CONFIG_ARCNET is not set
+CONFIG_MII=y
+# CONFIG_PHYLIB is not set
+# CONFIG_NET_ETHERNET is not set
+CONFIG_NETDEV_1000=y
+# CONFIG_ACENIC is not set
+# CONFIG_DL2K is not set
+# CONFIG_E1000 is not set
+# CONFIG_E1000E is not set
+# CONFIG_IP1000 is not set
+# CONFIG_IGB is not set
+# CONFIG_IGBVF is not set
+# CONFIG_NS83820 is not set
+# CONFIG_HAMACHI is not set
+# CONFIG_YELLOWFIN is not set
+# CONFIG_R8169 is not set
+# CONFIG_SIS190 is not set
+# CONFIG_SKGE is not set
+# CONFIG_SKY2 is not set
+# CONFIG_VIA_VELOCITY is not set
+# CONFIG_TIGON3 is not set
+# CONFIG_BNX2 is not set
+# CONFIG_CNIC is not set
+# CONFIG_QLA3XXX is not set
+# CONFIG_ATL1 is not set
+# CONFIG_ATL1E is not set
+# CONFIG_ATL1C is not set
+# CONFIG_JME is not set
+# CONFIG_STMMAC_ETH is not set
+# CONFIG_PCH_GBE is not set
+# CONFIG_FTGMAC100 is not set
+# CONFIG_NETDEV_10000 is not set
+# CONFIG_TR is not set
+CONFIG_WLAN=y
+# CONFIG_LIBERTAS_THINFIRM is not set
+# CONFIG_ATMEL is not set
+# CONFIG_AT76C50X_USB is not set
+# CONFIG_PRISM54 is not set
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_RTL8180 is not set
+CONFIG_RTL8187=m
+# CONFIG_ADM8211 is not set
+# CONFIG_MAC80211_HWSIM is not set
+# CONFIG_MWL8K is not set
+# CONFIG_ATH_COMMON is not set
+# CONFIG_B43 is not set
+# CONFIG_B43LEGACY is not set
+CONFIG_BCM4329=m
+# CONFIG_BCM4329_FIRST_SCAN is not set
+CONFIG_BCM4329_FW_PATH="/system/vendor/firmware/fw_bcm4329.bin"
+CONFIG_BCM4329_NVRAM_PATH="/system/etc/nvram_4329.txt"
+CONFIG_BCM4329_WIFI_CONTROL_FUNC=y
+# CONFIG_BCM4329_DHD_USE_STATIC_BUF is not set
+# CONFIG_BCM4329_HW_OOB is not set
+# CONFIG_BCM4329_OOB_INTR_ONLY is not set
+# CONFIG_BCM4329_GET_CUSTOM_MAC_ENABLE is not set
+# CONFIG_BCM4329_CSCAN_ENABLE is not set
+# CONFIG_BCM4330 is not set
+CONFIG_BCMDHD_FW_DIR="/system/vendor/firmware"
+CONFIG_BCMDHD_NVRAM_PATH="/data/misc/wifi/nvram.txt"
+CONFIG_BCMDHD_WIFI_CONTROL_FUNC=y
+CONFIG_BCMDHD_HW_OOB=y
+# CONFIG_BCM4334 is not set
+# CONFIG_SD8797 is not set
+# CONFIG_HOSTAP is not set
+# CONFIG_IPW2100 is not set
+# CONFIG_IPW2200 is not set
+# CONFIG_IWLAGN is not set
+# CONFIG_IWL4965 is not set
+# CONFIG_IWL3945 is not set
+# CONFIG_IWM is not set
+# CONFIG_LIBERTAS is not set
+# CONFIG_HERMES is not set
+# CONFIG_P54_COMMON is not set
+# CONFIG_RT2X00 is not set
+# CONFIG_RTL8192CE is not set
+# CONFIG_RTL8192SE is not set
+# CONFIG_RTL8192DE is not set
+# CONFIG_RTL8192CU is not set
+# CONFIG_WL1251 is not set
+# CONFIG_WL12XX_MENU is not set
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+# CONFIG_MWIFIEX is not set
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+CONFIG_USB_USBNET=y
+CONFIG_USB_NET_AX8817X=y
+CONFIG_USB_NET_CDCETHER=y
+# CONFIG_USB_NET_CDC_EEM is not set
+CONFIG_USB_NET_CDC_NCM=y
+# CONFIG_USB_NET_DM9601 is not set
+# CONFIG_USB_NET_SMSC75XX is not set
+CONFIG_USB_NET_SMSC95XX=y
+# CONFIG_USB_NET_GL620A is not set
+# CONFIG_USB_NET_NET1080 is not set
+# CONFIG_USB_NET_PLUSB is not set
+# CONFIG_USB_NET_MCS7830 is not set
+# CONFIG_USB_NET_RNDIS_HOST is not set
+CONFIG_USB_NET_CDC_SUBSET=y
+# CONFIG_USB_ALI_M5632 is not set
+# CONFIG_USB_AN2720 is not set
+# CONFIG_USB_BELKIN is not set
+# CONFIG_USB_ARMLINUX is not set
+# CONFIG_USB_EPSON2888 is not set
+# CONFIG_USB_KC2190 is not set
+# CONFIG_USB_NET_ZAURUS is not set
+# CONFIG_USB_NET_CX82310_ETH is not set
+# CONFIG_USB_NET_KALMIA is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_NET_INT51X1 is not set
+# CONFIG_USB_IPHETH is not set
+# CONFIG_USB_SIERRA_NET is not set
+# CONFIG_USB_VL600 is not set
+CONFIG_USB_NET_RAW_IP=m
+# CONFIG_WAN is not set
+
+#
+# CAIF transport drivers
+#
+# CONFIG_CAIF_TTY is not set
+# CONFIG_CAIF_SPI_SLAVE is not set
+# CONFIG_CAIF_HSI is not set
+# CONFIG_FDDI is not set
+# CONFIG_HIPPI is not set
+CONFIG_PPP=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_ASYNC=y
+CONFIG_PPP_SYNC_TTY=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPPOE=y
+CONFIG_PPPOLAC=y
+CONFIG_PPPOPNS=y
+CONFIG_SLIP=y
+# CONFIG_SLIP_COMPRESSED is not set
+CONFIG_SLHC=y
+# CONFIG_SLIP_SMART is not set
+# CONFIG_SLIP_MODE_SLIP6 is not set
+# CONFIG_NET_FC is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+# CONFIG_VMXNET3 is not set
+# CONFIG_ISDN is not set
+# CONFIG_PHONE is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+CONFIG_INPUT_JOYDEV=y
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+CONFIG_INPUT_KEYRESET=y
+CONFIG_INPUT_ASUSEC=y
+CONFIG_ASUSPEC=y
+CONFIG_ASUSDEC=y
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+# CONFIG_KEYBOARD_ATKBD is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+CONFIG_KEYBOARD_GPIO=y
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+CONFIG_KEYBOARD_TEGRA=y
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_VSXXXAA is not set
+# CONFIG_MOUSE_GPIO is not set
+CONFIG_MOUSE_SYNAPTICS_I2C=y
+CONFIG_INPUT_JOYSTICK=y
+# CONFIG_JOYSTICK_ANALOG is not set
+# CONFIG_JOYSTICK_A3D is not set
+# CONFIG_JOYSTICK_ADI is not set
+# CONFIG_JOYSTICK_COBRA is not set
+# CONFIG_JOYSTICK_GF2K is not set
+# CONFIG_JOYSTICK_GRIP is not set
+# CONFIG_JOYSTICK_GRIP_MP is not set
+# CONFIG_JOYSTICK_GUILLEMOT is not set
+# CONFIG_JOYSTICK_INTERACT is not set
+# CONFIG_JOYSTICK_SIDEWINDER is not set
+# CONFIG_JOYSTICK_TMDC is not set
+# CONFIG_JOYSTICK_IFORCE is not set
+# CONFIG_JOYSTICK_WARRIOR is not set
+# CONFIG_JOYSTICK_MAGELLAN is not set
+# CONFIG_JOYSTICK_SPACEORB is not set
+# CONFIG_JOYSTICK_SPACEBALL is not set
+# CONFIG_JOYSTICK_STINGER is not set
+# CONFIG_JOYSTICK_TWIDJOY is not set
+# CONFIG_JOYSTICK_ZHENHUA is not set
+# CONFIG_JOYSTICK_AS5011 is not set
+# CONFIG_JOYSTICK_JOYDUMP is not set
+CONFIG_JOYSTICK_XPAD=y
+# CONFIG_JOYSTICK_XPAD_FF is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MXT is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_PANJIT_I2C is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+CONFIG_TOUCHSCREEN_ATMEL_MT_T9=y
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_TOUCHSCREEN_ELAN_TF_3K=y
+CONFIG_TOUCHSCREEN_SIS_I2C=y
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+# CONFIG_INPUT_ATI_REMOTE is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+CONFIG_INPUT_KEYCHORD=y
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_KXTJ9 is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_PWM_BEEPER is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_CMA3000 is not set
+# CONFIG_INPUT_ALPS_GPIO_SCROLLWHEEL is not set
+CONFIG_INPUT_CAPELLA_CM3217=y
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+# CONFIG_SERIO_PCIPS2 is not set
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NOZOMI is not set
+# CONFIG_N_GSM is not set
+# CONFIG_TRACE_SINK is not set
+CONFIG_DEVMEM=y
+# CONFIG_DEVKMEM is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+# CONFIG_SERIAL_8250_EXTENDED is not set
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_TEGRA=y
+# CONFIG_SERIAL_MFD_HSU is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_JSM is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_PCH_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_HW_RANDOM is not set
+# CONFIG_R3964 is not set
+# CONFIG_APPLICOM is not set
+# CONFIG_RAW_DRIVER is not set
+# CONFIG_TCG_TPM is not set
+CONFIG_DEVPORT=y
+# CONFIG_DCC_TTY is not set
+# CONFIG_RAMOOPS is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+# CONFIG_I2C_COMPAT is not set
+CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_MUX=y
+
+#
+# Multiplexer I2C Chip support
+#
+# CONFIG_I2C_MUX_GPIO is not set
+# CONFIG_I2C_MUX_PCA9541 is not set
+# CONFIG_I2C_MUX_PCA954x is not set
+# CONFIG_I2C_SLAVE is not set
+# CONFIG_I2C_HELPER_AUTO is not set
+# CONFIG_I2C_SMBUS is not set
+
+#
+# I2C Algorithms
+#
+# CONFIG_I2C_ALGOBIT is not set
+# CONFIG_I2C_ALGOPCF is not set
+# CONFIG_I2C_ALGOPCA is not set
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# PC SMBus host controller drivers
+#
+# CONFIG_I2C_ALI1535 is not set
+# CONFIG_I2C_ALI1563 is not set
+# CONFIG_I2C_ALI15X3 is not set
+# CONFIG_I2C_AMD756 is not set
+# CONFIG_I2C_AMD8111 is not set
+# CONFIG_I2C_I801 is not set
+# CONFIG_I2C_ISCH is not set
+# CONFIG_I2C_PIIX4 is not set
+# CONFIG_I2C_NFORCE2 is not set
+# CONFIG_I2C_SIS5595 is not set
+# CONFIG_I2C_SIS630 is not set
+# CONFIG_I2C_SIS96X is not set
+# CONFIG_I2C_VIA is not set
+# CONFIG_I2C_VIAPRO is not set
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_INTEL_MID is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PXA_PCI is not set
+# CONFIG_I2C_SIMTEC is not set
+CONFIG_I2C_TEGRA=y
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_EG20T is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_SPI is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+
+#
+# Enable Device Drivers -> PPS to see the PTP clock options.
+#
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIOLIB=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_GPIO_SYSFS=y
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_IT8761E is not set
+# CONFIG_GPIO_VX855 is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_SX150X is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+# CONFIG_GPIO_BT8XX is not set
+# CONFIG_GPIO_ML_IOH is not set
+# CONFIG_GPIO_RDC321X is not set
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MCP23S08 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_BQ20Z75 is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+CONFIG_CHARGER_SMB349=y
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_BATTERY_MAX17048 is not set
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+CONFIG_CHARGER_GPIO=y
+CONFIG_BATTERY_PAD=y
+# CONFIG_TEGRA_BPC_MGMT is not set
+CONFIG_HWMON=y
+# CONFIG_HWMON_VID is not set
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+# CONFIG_SENSORS_AD7414 is not set
+# CONFIG_SENSORS_AD7418 is not set
+# CONFIG_SENSORS_ADM1021 is not set
+# CONFIG_SENSORS_ADM1025 is not set
+# CONFIG_SENSORS_ADM1026 is not set
+# CONFIG_SENSORS_ADM1029 is not set
+# CONFIG_SENSORS_ADM1031 is not set
+# CONFIG_SENSORS_ADM9240 is not set
+# CONFIG_SENSORS_ADT7411 is not set
+# CONFIG_SENSORS_ADT7461 is not set
+# CONFIG_SENSORS_ADT7462 is not set
+# CONFIG_SENSORS_ADT7470 is not set
+# CONFIG_SENSORS_ADT7475 is not set
+# CONFIG_SENSORS_ASC7621 is not set
+# CONFIG_SENSORS_ATXP1 is not set
+# CONFIG_SENSORS_DS620 is not set
+# CONFIG_SENSORS_DS1621 is not set
+# CONFIG_SENSORS_I5K_AMB is not set
+# CONFIG_SENSORS_F71805F is not set
+# CONFIG_SENSORS_F71882FG is not set
+# CONFIG_SENSORS_F75375S is not set
+# CONFIG_SENSORS_G760A is not set
+# CONFIG_SENSORS_GL518SM is not set
+# CONFIG_SENSORS_GL520SM is not set
+# CONFIG_SENSORS_GPIO_FAN is not set
+# CONFIG_SENSORS_IT87 is not set
+# CONFIG_SENSORS_JC42 is not set
+# CONFIG_SENSORS_LINEAGE is not set
+# CONFIG_SENSORS_LM63 is not set
+# CONFIG_SENSORS_LM73 is not set
+# CONFIG_SENSORS_LM75 is not set
+# CONFIG_SENSORS_LM77 is not set
+# CONFIG_SENSORS_LM78 is not set
+# CONFIG_SENSORS_LM80 is not set
+# CONFIG_SENSORS_LM83 is not set
+# CONFIG_SENSORS_LM85 is not set
+# CONFIG_SENSORS_LM87 is not set
+# CONFIG_SENSORS_LM90 is not set
+# CONFIG_SENSORS_LM92 is not set
+# CONFIG_SENSORS_LM93 is not set
+# CONFIG_SENSORS_LTC4151 is not set
+# CONFIG_SENSORS_LTC4215 is not set
+# CONFIG_SENSORS_LTC4245 is not set
+# CONFIG_SENSORS_LTC4261 is not set
+# CONFIG_SENSORS_LM95241 is not set
+# CONFIG_SENSORS_LM95245 is not set
+# CONFIG_SENSORS_MAX16065 is not set
+# CONFIG_SENSORS_MAX1619 is not set
+# CONFIG_SENSORS_MAX1668 is not set
+# CONFIG_SENSORS_MAX6639 is not set
+# CONFIG_SENSORS_MAX6642 is not set
+# CONFIG_SENSORS_MAX6650 is not set
+# CONFIG_SENSORS_NTC_THERMISTOR is not set
+# CONFIG_SENSORS_PC87360 is not set
+# CONFIG_SENSORS_PC87427 is not set
+# CONFIG_SENSORS_PCF8591 is not set
+# CONFIG_PMBUS is not set
+# CONFIG_SENSORS_SHT15 is not set
+# CONFIG_SENSORS_SHT21 is not set
+# CONFIG_SENSORS_SIS5595 is not set
+# CONFIG_SENSORS_SMM665 is not set
+# CONFIG_SENSORS_DME1737 is not set
+# CONFIG_SENSORS_EMC1403 is not set
+# CONFIG_SENSORS_EMC2103 is not set
+# CONFIG_SENSORS_EMC6W201 is not set
+# CONFIG_SENSORS_SMSC47M1 is not set
+# CONFIG_SENSORS_SMSC47M192 is not set
+# CONFIG_SENSORS_SMSC47B397 is not set
+# CONFIG_SENSORS_SCH56XX_COMMON is not set
+# CONFIG_SENSORS_SCH5627 is not set
+# CONFIG_SENSORS_SCH5636 is not set
+# CONFIG_SENSORS_ADS1015 is not set
+# CONFIG_SENSORS_ADS7828 is not set
+# CONFIG_SENSORS_AMC6821 is not set
+CONFIG_SENSORS_TEGRA_TSENSOR=y
+# CONFIG_SENSORS_THMC50 is not set
+# CONFIG_SENSORS_TMP102 is not set
+# CONFIG_SENSORS_TMP401 is not set
+# CONFIG_SENSORS_TMP421 is not set
+# CONFIG_SENSORS_VIA686A is not set
+# CONFIG_SENSORS_VT1211 is not set
+# CONFIG_SENSORS_VT8231 is not set
+# CONFIG_SENSORS_W83781D is not set
+# CONFIG_SENSORS_W83791D is not set
+# CONFIG_SENSORS_W83792D is not set
+# CONFIG_SENSORS_W83793 is not set
+# CONFIG_SENSORS_W83795 is not set
+# CONFIG_SENSORS_W83L785TS is not set
+# CONFIG_SENSORS_W83L786NG is not set
+# CONFIG_SENSORS_W83627HF is not set
+# CONFIG_SENSORS_W83627EHF is not set
+CONFIG_SENSORS_INA219=y
+# CONFIG_SENSORS_INA230 is not set
+CONFIG_SENSORS_AL3010=y
+CONFIG_THERMAL=y
+CONFIG_THERMAL_HWMON=y
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_CORE is not set
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_DW_WATCHDOG is not set
+# CONFIG_MPCORE_WATCHDOG is not set
+CONFIG_TEGRA_WATCHDOG=y
+CONFIG_TEGRA_WATCHDOG_ENABLE_ON_PROBE=y
+# CONFIG_MAX63XX_WATCHDOG is not set
+# CONFIG_ALIM7101_WDT is not set
+
+#
+# PCI-based Watchdog Cards
+#
+# CONFIG_PCIPCWATCHDOG is not set
+# CONFIG_WDTPCI is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+# CONFIG_BCMA is not set
+CONFIG_MFD_SUPPORT=y
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_MFD_MAX8907C is not set
+CONFIG_MFD_MAX77663=y
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_TIMBERDALE is not set
+# CONFIG_LPC_SCH is not set
+# CONFIG_MFD_RDC321X is not set
+# CONFIG_MFD_JANZ_CMODIO is not set
+# CONFIG_MFD_VX855 is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+CONFIG_MFD_TPS6591X=y
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_TPS80031 is not set
+CONFIG_MFD_RICOH583=y
+# CONFIG_MFD_PALMAS is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+CONFIG_REGULATOR_FIXED_VOLTAGE=y
+CONFIG_REGULATOR_VIRTUAL_CONSUMER=y
+CONFIG_REGULATOR_USERSPACE_CONSUMER=y
+CONFIG_REGULATOR_GPIO=y
+# CONFIG_REGULATOR_BQ24022 is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_MAX8952 is not set
+# CONFIG_REGULATOR_MAX8973 is not set
+CONFIG_REGULATOR_MAX77663=y
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_LP3972 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+# CONFIG_REGULATOR_AD5398 is not set
+CONFIG_REGULATOR_TPS62360=y
+CONFIG_REGULATOR_TPS6238X0=y
+CONFIG_REGULATOR_TPS6591X=y
+CONFIG_REGULATOR_RICOH583=y
+# CONFIG_REGULATOR_FAN53555 is not set
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+# CONFIG_MEDIA_CONTROLLER is not set
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2_COMMON=y
+# CONFIG_DVB_CORE is not set
+CONFIG_VIDEO_MEDIA=y
+
+#
+# Multimedia drivers
+#
+# CONFIG_RC_CORE is not set
+# CONFIG_MEDIA_ATTACH is not set
+CONFIG_MEDIA_TUNER=y
+CONFIG_MEDIA_TUNER_CUSTOMISE=y
+
+#
+# Customize TV tuners
+#
+# CONFIG_MEDIA_TUNER_SIMPLE is not set
+# CONFIG_MEDIA_TUNER_TDA8290 is not set
+# CONFIG_MEDIA_TUNER_TDA827X is not set
+# CONFIG_MEDIA_TUNER_TDA18271 is not set
+# CONFIG_MEDIA_TUNER_TDA9887 is not set
+# CONFIG_MEDIA_TUNER_TEA5761 is not set
+# CONFIG_MEDIA_TUNER_TEA5767 is not set
+# CONFIG_MEDIA_TUNER_MT20XX is not set
+# CONFIG_MEDIA_TUNER_MT2060 is not set
+# CONFIG_MEDIA_TUNER_MT2266 is not set
+# CONFIG_MEDIA_TUNER_MT2131 is not set
+# CONFIG_MEDIA_TUNER_QT1010 is not set
+# CONFIG_MEDIA_TUNER_XC2028 is not set
+# CONFIG_MEDIA_TUNER_XC5000 is not set
+# CONFIG_MEDIA_TUNER_XC4000 is not set
+# CONFIG_MEDIA_TUNER_MXL5005S is not set
+# CONFIG_MEDIA_TUNER_MXL5007T is not set
+# CONFIG_MEDIA_TUNER_MC44S803 is not set
+# CONFIG_MEDIA_TUNER_MAX2165 is not set
+# CONFIG_MEDIA_TUNER_TDA18218 is not set
+# CONFIG_MEDIA_TUNER_TDA18212 is not set
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
+
+#
+# Audio decoders, processors and mixers
+#
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+
+#
+# Video and audio decoders
+#
+
+#
+# MPEG video encoders
+#
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+# CONFIG_VIDEO_VIVI is not set
+CONFIG_TEGRA_RPC=y
+# CONFIG_TEGRA_AVP is not set
+# CONFIG_TEGRA_MEDIASERVER is not set
+CONFIG_TEGRA_NVAVP=y
+CONFIG_TEGRA_NVAVP_AUDIO=y
+CONFIG_TEGRA_CAMERA=y
+CONFIG_VIDEO_YUV=y
+CONFIG_VIDEO_FJM6MO=y
+CONFIG_VIDEO_MI1040=y
+CONFIG_VIDEO_ICATCH7002A=y
+CONFIG_TEGRA_DTV=y
+# CONFIG_VIDEO_OV5650 is not set
+# CONFIG_VIDEO_OV5640 is not set
+# CONFIG_VIDEO_OV14810 is not set
+# CONFIG_VIDEO_OV9726 is not set
+# CONFIG_VIDEO_OV2710 is not set
+# CONFIG_VIDEO_AR0832 is not set
+# CONFIG_VIDEO_SOC380 is not set
+# CONFIG_TORCH_SSL3250A is not set
+# CONFIG_TORCH_TPS61050 is not set
+# CONFIG_VIDEO_SH532U is not set
+# CONFIG_VIDEO_AD5820 is not set
+# CONFIG_VIDEO_AD5816 is not set
+# CONFIG_VIDEO_CPIA2 is not set
+# CONFIG_VIDEO_SAA7134 is not set
+# CONFIG_VIDEO_MXB is not set
+# CONFIG_VIDEO_HEXIUM_ORION is not set
+# CONFIG_VIDEO_HEXIUM_GEMINI is not set
+# CONFIG_VIDEO_CAFE_CCIC is not set
+# CONFIG_VIDEO_SR030PC30 is not set
+# CONFIG_VIDEO_NOON010PC30 is not set
+# CONFIG_SOC_CAMERA is not set
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_USB_VIDEO_CLASS=y
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+# CONFIG_USB_GSPCA is not set
+# CONFIG_VIDEO_PVRUSB2 is not set
+# CONFIG_VIDEO_HDPVR is not set
+# CONFIG_VIDEO_EM28XX is not set
+# CONFIG_VIDEO_USBVISION is not set
+# CONFIG_USB_ET61X251 is not set
+# CONFIG_USB_SN9C102 is not set
+# CONFIG_USB_PWC is not set
+# CONFIG_USB_ZR364XX is not set
+# CONFIG_USB_STKWEBCAM is not set
+# CONFIG_USB_S2255 is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_RADIO_ADAPTERS is not set
+
+#
+# Graphics support
+#
+CONFIG_VGA_ARB=y
+CONFIG_VGA_ARB_MAX_GPUS=16
+# CONFIG_DRM is not set
+# CONFIG_STUB_POULSBO is not set
+# CONFIG_ION is not set
+# CONFIG_VGASTATE is not set
+CONFIG_VIDEO_OUTPUT_CONTROL=y
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_WMT_GE_ROPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+CONFIG_FB_MODE_HELPERS=y
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_CIRRUS is not set
+# CONFIG_FB_PM2 is not set
+# CONFIG_FB_CYBER2000 is not set
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_MATROX is not set
+# CONFIG_FB_RADEON is not set
+# CONFIG_FB_ATY128 is not set
+# CONFIG_FB_ATY is not set
+# CONFIG_FB_S3 is not set
+# CONFIG_FB_SAVAGE is not set
+# CONFIG_FB_SIS is not set
+# CONFIG_FB_NEOMAGIC is not set
+# CONFIG_FB_KYRO is not set
+# CONFIG_FB_3DFX is not set
+# CONFIG_FB_VOODOO1 is not set
+# CONFIG_FB_VT8623 is not set
+# CONFIG_FB_TRIDENT is not set
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+# CONFIG_FB_CARMINE is not set
+# CONFIG_FB_TMIO is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_BROADSHEET is not set
+
+#
+# NVIDIA Tegra Display Driver options
+#
+CONFIG_TEGRA_GRHOST=y
+CONFIG_TEGRA_GRHOST_USE_NVMAP=y
+CONFIG_TEGRA_GRHOST_DEFAULT_TIMEOUT=30000
+CONFIG_TEGRA_DC=y
+CONFIG_FB_TEGRA=y
+CONFIG_TEGRA_DC_EXTENSIONS=y
+CONFIG_TEGRA_NVMAP=y
+CONFIG_NVMAP_RECLAIM_UNPINNED_VM=y
+# CONFIG_NVMAP_ALLOW_SYSMEM is not set
+# CONFIG_NVMAP_HIGHMEM_ONLY is not set
+# CONFIG_NVMAP_CARVEOUT_KILLER is not set
+CONFIG_NVMAP_CARVEOUT_COMPACTOR=y
+CONFIG_NVMAP_PAGE_POOLS=y
+CONFIG_NVMAP_PAGE_POOL_SIZE=0x0
+CONFIG_NVMAP_CACHE_MAINT_BY_SET_WAYS=y
+# CONFIG_NVMAP_VPR is not set
+CONFIG_TEGRA_DSI=y
+CONFIG_NVMAP_CONVERT_CARVEOUT_TO_IOVMM=y
+CONFIG_TEGRA_NVHDCP=y
+# CONFIG_TEGRA_HDMI_74MHZ_LIMIT is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+# CONFIG_LCD_PLATFORM is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+CONFIG_BACKLIGHT_PWM=y
+CONFIG_BACKLIGHT_TEGRA_PWM=y
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+
+#
+# Display device support
+#
+# CONFIG_DISPLAY_SUPPORT is not set
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+CONFIG_FONTS=y
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+# CONFIG_FONT_6x11 is not set
+# CONFIG_FONT_7x14 is not set
+# CONFIG_FONT_PEARL_8x8 is not set
+# CONFIG_FONT_ACORN_8x8 is not set
+# CONFIG_FONT_MINI_4x6 is not set
+# CONFIG_FONT_SUN8x16 is not set
+# CONFIG_FONT_SUN12x22 is not set
+# CONFIG_FONT_10x18 is not set
+CONFIG_LOGO=y
+CONFIG_LOGO_LINUX_MONO=y
+CONFIG_LOGO_LINUX_VGA16=y
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+CONFIG_SND_VMASTER=y
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_ALOOP is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_PCI=y
+# CONFIG_SND_AD1889 is not set
+# CONFIG_SND_ALS300 is not set
+# CONFIG_SND_ALI5451 is not set
+# CONFIG_SND_ATIIXP is not set
+# CONFIG_SND_ATIIXP_MODEM is not set
+# CONFIG_SND_AU8810 is not set
+# CONFIG_SND_AU8820 is not set
+# CONFIG_SND_AU8830 is not set
+# CONFIG_SND_AW2 is not set
+# CONFIG_SND_AZT3328 is not set
+# CONFIG_SND_BT87X is not set
+# CONFIG_SND_CA0106 is not set
+# CONFIG_SND_CMIPCI is not set
+# CONFIG_SND_OXYGEN is not set
+# CONFIG_SND_CS4281 is not set
+# CONFIG_SND_CS46XX is not set
+# CONFIG_SND_CS5535AUDIO is not set
+# CONFIG_SND_CTXFI is not set
+# CONFIG_SND_DARLA20 is not set
+# CONFIG_SND_GINA20 is not set
+# CONFIG_SND_LAYLA20 is not set
+# CONFIG_SND_DARLA24 is not set
+# CONFIG_SND_GINA24 is not set
+# CONFIG_SND_LAYLA24 is not set
+# CONFIG_SND_MONA is not set
+# CONFIG_SND_MIA is not set
+# CONFIG_SND_ECHO3G is not set
+# CONFIG_SND_INDIGO is not set
+# CONFIG_SND_INDIGOIO is not set
+# CONFIG_SND_INDIGODJ is not set
+# CONFIG_SND_INDIGOIOX is not set
+# CONFIG_SND_INDIGODJX is not set
+# CONFIG_SND_EMU10K1 is not set
+# CONFIG_SND_EMU10K1X is not set
+# CONFIG_SND_ENS1370 is not set
+# CONFIG_SND_ENS1371 is not set
+# CONFIG_SND_ES1938 is not set
+# CONFIG_SND_ES1968 is not set
+# CONFIG_SND_FM801 is not set
+CONFIG_SND_HDA_INTEL=y
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+# CONFIG_SND_HDA_HWDEP is not set
+# CONFIG_SND_HDA_INPUT_BEEP is not set
+# CONFIG_SND_HDA_INPUT_JACK is not set
+# CONFIG_SND_HDA_PATCH_LOADER is not set
+CONFIG_SND_HDA_PLATFORM_DRIVER=y
+CONFIG_SND_HDA_PLATFORM_NVIDIA_TEGRA=y
+CONFIG_SND_HDA_CODEC_REALTEK=y
+CONFIG_SND_HDA_ENABLE_REALTEK_QUIRKS=y
+# CONFIG_SND_HDA_CODEC_ANALOG is not set
+# CONFIG_SND_HDA_CODEC_SIGMATEL is not set
+# CONFIG_SND_HDA_CODEC_VIA is not set
+CONFIG_SND_HDA_CODEC_HDMI=y
+# CONFIG_SND_HDA_CODEC_CIRRUS is not set
+# CONFIG_SND_HDA_CODEC_CONEXANT is not set
+# CONFIG_SND_HDA_CODEC_CA0110 is not set
+# CONFIG_SND_HDA_CODEC_CA0132 is not set
+# CONFIG_SND_HDA_CODEC_CMEDIA is not set
+# CONFIG_SND_HDA_CODEC_SI3054 is not set
+CONFIG_SND_HDA_GENERIC=y
+CONFIG_SND_HDA_POWER_SAVE=y
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=10
+# CONFIG_SND_HDSP is not set
+# CONFIG_SND_HDSPM is not set
+# CONFIG_SND_ICE1712 is not set
+# CONFIG_SND_ICE1724 is not set
+# CONFIG_SND_INTEL8X0 is not set
+# CONFIG_SND_INTEL8X0M is not set
+# CONFIG_SND_KORG1212 is not set
+# CONFIG_SND_LOLA is not set
+# CONFIG_SND_LX6464ES is not set
+# CONFIG_SND_MAESTRO3 is not set
+# CONFIG_SND_MIXART is not set
+# CONFIG_SND_NM256 is not set
+# CONFIG_SND_PCXHR is not set
+# CONFIG_SND_RIPTIDE is not set
+# CONFIG_SND_RME32 is not set
+# CONFIG_SND_RME96 is not set
+# CONFIG_SND_RME9652 is not set
+# CONFIG_SND_SONICVIBES is not set
+# CONFIG_SND_TRIDENT is not set
+# CONFIG_SND_VIA82XX is not set
+# CONFIG_SND_VIA82XX_MODEM is not set
+# CONFIG_SND_VIRTUOSO is not set
+# CONFIG_SND_VX222 is not set
+# CONFIG_SND_YMFPCI is not set
+CONFIG_SND_ARM=y
+CONFIG_SND_USB=y
+# CONFIG_SND_USB_AUDIO is not set
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_6FIRE is not set
+CONFIG_SND_SOC=y
+# CONFIG_SND_SOC_CACHE_LZO is not set
+CONFIG_SND_SOC_TEGRA=y
+CONFIG_SND_SOC_TEGRA30_AHUB=y
+CONFIG_SND_SOC_TEGRA30_DAM=y
+CONFIG_SND_SOC_TEGRA30_I2S=y
+CONFIG_SND_SOC_TEGRA30_SPDIF=y
+CONFIG_MACH_HAS_SND_SOC_TEGRA_RT5631=y
+CONFIG_SND_SOC_TEGRA_RT5631=y
+CONFIG_MACH_HAS_SND_SOC_TEGRA_WM8903=y
+CONFIG_SND_SOC_TEGRA_WM8903=y
+CONFIG_HEADSET_FUNCTION=y
+CONFIG_DSP_FM34=y
+CONFIG_MACH_HAS_SND_SOC_TEGRA_RT5642=y
+CONFIG_SND_SOC_TEGRA_RT5642=y
+CONFIG_MACH_HAS_SND_SOC_TEGRA_MAX98095=y
+# CONFIG_SND_SOC_TEGRA_MAX98095 is not set
+CONFIG_AUDIO_DOCK=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+CONFIG_SND_SOC_RT5631=y
+CONFIG_SND_SOC_RT5642=y
+CONFIG_SND_SOC_SPDIF=y
+# CONFIG_SND_SOC_TLV320AIC326X is not set
+CONFIG_SND_SOC_WM8903=y
+# CONFIG_SOUND_PRIME is not set
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HIDRAW is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACRUX is not set
+CONFIG_HID_APPLE=y
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_PRODIKEYS is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LOGITECH is not set
+# CONFIG_HID_MAGICMOUSE is not set
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_QUANTA is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAMSUNG is not set
+CONFIG_HID_SONY=y
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+CONFIG_HID_SIS=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+CONFIG_USB_DEVICE_CLASS=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_SUSPEND=y
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_XHCI_HCD is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_USB_EHCI_TEGRA=y
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_UHCI_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_WHCI_HCD is not set
+# CONFIG_USB_HWA_HCD is not set
+# CONFIG_USB_EHCI_ONOFF_FEATURE is not set
+# CONFIG_USB_MUSB_HDRC is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=y
+# CONFIG_USB_PRINTER is not set
+CONFIG_USB_WDM=y
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
+# CONFIG_USB_UAS is not set
+CONFIG_USB_LIBUSUAL=y
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+
+#
+# USB port drivers
+#
+CONFIG_USB_SERIAL=y
+# CONFIG_USB_SERIAL_CONSOLE is not set
+# CONFIG_USB_EZUSB is not set
+CONFIG_USB_SERIAL_GENERIC=y
+# CONFIG_USB_SERIAL_AIRCABLE is not set
+# CONFIG_USB_SERIAL_ARK3116 is not set
+# CONFIG_USB_SERIAL_BELKIN is not set
+# CONFIG_USB_SERIAL_CH341 is not set
+# CONFIG_USB_SERIAL_WHITEHEAT is not set
+# CONFIG_USB_SERIAL_DIGI_ACCELEPORT is not set
+# CONFIG_USB_SERIAL_CP210X is not set
+# CONFIG_USB_SERIAL_CYPRESS_M8 is not set
+# CONFIG_USB_SERIAL_EMPEG is not set
+# CONFIG_USB_SERIAL_FTDI_SIO is not set
+# CONFIG_USB_SERIAL_FUNSOFT is not set
+# CONFIG_USB_SERIAL_VISOR is not set
+# CONFIG_USB_SERIAL_IPAQ is not set
+# CONFIG_USB_SERIAL_IR is not set
+# CONFIG_USB_SERIAL_EDGEPORT is not set
+# CONFIG_USB_SERIAL_EDGEPORT_TI is not set
+# CONFIG_USB_SERIAL_GARMIN is not set
+# CONFIG_USB_SERIAL_IPW is not set
+# CONFIG_USB_SERIAL_IUU is not set
+# CONFIG_USB_SERIAL_KEYSPAN_PDA is not set
+# CONFIG_USB_SERIAL_KEYSPAN is not set
+# CONFIG_USB_SERIAL_KLSI is not set
+# CONFIG_USB_SERIAL_KOBIL_SCT is not set
+# CONFIG_USB_SERIAL_MCT_U232 is not set
+# CONFIG_USB_SERIAL_MOS7720 is not set
+# CONFIG_USB_SERIAL_MOS7840 is not set
+# CONFIG_USB_SERIAL_MOTOROLA is not set
+# CONFIG_USB_SERIAL_NAVMAN is not set
+CONFIG_USB_SERIAL_PL2303=y
+# CONFIG_USB_SERIAL_OTI6858 is not set
+# CONFIG_USB_SERIAL_QCAUX is not set
+CONFIG_USB_SERIAL_QUALCOMM=y
+# CONFIG_USB_SERIAL_SPCP8X5 is not set
+# CONFIG_USB_SERIAL_HP4X is not set
+# CONFIG_USB_SERIAL_SAFE is not set
+# CONFIG_USB_SERIAL_SIEMENS_MPI is not set
+# CONFIG_USB_SERIAL_SIERRAWIRELESS is not set
+# CONFIG_USB_SERIAL_SYMBOL is not set
+# CONFIG_USB_SERIAL_TI is not set
+# CONFIG_USB_SERIAL_CYBERJACK is not set
+# CONFIG_USB_SERIAL_XIRCOM is not set
+CONFIG_USB_SERIAL_WWAN=y
+CONFIG_USB_SERIAL_OPTION=y
+# CONFIG_USB_SERIAL_OMNINET is not set
+# CONFIG_USB_SERIAL_OPTICON is not set
+# CONFIG_USB_SERIAL_VIVOPAY_SERIAL is not set
+# CONFIG_USB_SERIAL_ZIO is not set
+# CONFIG_USB_SERIAL_SSU100 is not set
+# CONFIG_USB_SERIAL_DEBUG is not set
+CONFIG_USB_SERIAL_BASEBAND=m
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=500
+# CONFIG_USB_FSL_USB2 is not set
+# CONFIG_USB_FUSB300 is not set
+CONFIG_USB_TEGRA=y
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_AMD5536UDC is not set
+# CONFIG_USB_CI13XXX_PCI is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_NET2280 is not set
+# CONFIG_USB_GOKU is not set
+# CONFIG_USB_LANGWELL is not set
+# CONFIG_USB_EG20T is not set
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_FILE_STORAGE is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+CONFIG_USB_G_ANDROID=y
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_OTG_WAKELOCK is not set
+# CONFIG_USB_GPIO_VBUS is not set
+CONFIG_USB_ULPI=y
+CONFIG_USB_ULPI_VIEWPORT=y
+# CONFIG_NOP_USB_XCEIV is not set
+CONFIG_USB_TEGRA_OTG=y
+# CONFIG_UWB is not set
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+# CONFIG_MMC_CLKGATE is not set
+CONFIG_MMC_EMBEDDED_SDIO=y
+CONFIG_MMC_PARANOID_SD_INIT=y
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=16
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_MMC_BLOCK_DEFERRED_RESUME=y
+# CONFIG_SDIO_UART is not set
+CONFIG_MMC_TEST=y
+# CONFIG_MMC_BKOPS is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_IO_ACCESSORS=y
+# CONFIG_MMC_SDHCI_PCI is not set
+CONFIG_MMC_SDHCI_PLTFM=y
+CONFIG_MMC_SDHCI_TEGRA=y
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+# CONFIG_MMC_TIFM_SD is not set
+# CONFIG_MMC_CB710 is not set
+# CONFIG_MMC_VIA_SDMMC is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+CONFIG_SWITCH=y
+# CONFIG_SWITCH_GPIO is not set
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_INFINIBAND is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+CONFIG_RTC_INTF_ALARM=y
+CONFIG_RTC_INTF_ALARM_DEV=y
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+CONFIG_RTC_DRV_MAX77663=y
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_TEGRA is not set
+CONFIG_RTC_DRV_TPS6591x=y
+# CONFIG_RTC_DRV_RC5T583 is not set
+# CONFIG_DMADEVICES is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+
+#
+# Virtio drivers
+#
+# CONFIG_VIRTIO_PCI is not set
+# CONFIG_VIRTIO_BALLOON is not set
+CONFIG_STAGING=y
+# CONFIG_ET131X is not set
+# CONFIG_USBIP_CORE is not set
+# CONFIG_W35UND is not set
+# CONFIG_PRISM2_USB is not set
+# CONFIG_ECHO is not set
+# CONFIG_BRCMUTIL is not set
+# CONFIG_ASUS_OLED is not set
+# CONFIG_R8187SE is not set
+# CONFIG_RTL8192U is not set
+# CONFIG_RTL8192E is not set
+# CONFIG_R8712U is not set
+# CONFIG_RTS_PSTOR is not set
+# CONFIG_TRANZPORT is not set
+
+#
+# Android
+#
+CONFIG_ANDROID=y
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ANDROID_LOGGER=y
+CONFIG_ANDROID_RAM_CONSOLE=y
+CONFIG_ANDROID_RAM_CONSOLE_ENABLE_VERBOSE=y
+CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION=y
+CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION_DATA_SIZE=128
+CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION_ECC_SIZE=16
+CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE=8
+CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION_POLYNOMIAL=0x11d
+# CONFIG_ANDROID_RAM_CONSOLE_EARLY_INIT is not set
+CONFIG_ANDROID_TIMED_OUTPUT=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+# CONFIG_POHMELFS is not set
+# CONFIG_LINE6_USB is not set
+# CONFIG_USB_SERIAL_QUATECH2 is not set
+# CONFIG_USB_SERIAL_QUATECH_USB2 is not set
+# CONFIG_VT6655 is not set
+# CONFIG_VT6656 is not set
+# CONFIG_VME_BUS is not set
+# CONFIG_DX_SEP is not set
+CONFIG_IIO=y
+# CONFIG_IIO_RING_BUFFER is not set
+# CONFIG_IIO_TRIGGER is not set
+
+#
+# Accelerometers
+#
+
+#
+# Analog to digital convertors
+#
+# CONFIG_AD7150 is not set
+# CONFIG_AD7152 is not set
+# CONFIG_AD7291 is not set
+# CONFIG_AD7606 is not set
+# CONFIG_AD799X is not set
+# CONFIG_AD7745 is not set
+# CONFIG_ADT75 is not set
+# CONFIG_ADT7410 is not set
+# CONFIG_MAX1363 is not set
+
+#
+# Analog digital bi-direction convertors
+#
+# CONFIG_ADT7316 is not set
+
+#
+# Digital to analog convertors
+#
+# CONFIG_MAX517 is not set
+
+#
+# Direct Digital Synthesis
+#
+
+#
+# Digital gyroscope sensors
+#
+
+#
+# Inertial measurement units
+#
+
+#
+# Light sensors
+#
+# CONFIG_SENSORS_ISL29018 is not set
+# CONFIG_SENSORS_ISL29028 is not set
+# CONFIG_SENSORS_TSL2563 is not set
+# CONFIG_TSL2583 is not set
+# CONFIG_SENSORS_LTR558 is not set
+
+#
+# Magnetometer sensors
+#
+# CONFIG_SENSORS_HMC5843 is not set
+
+#
+# Active energy metering IC
+#
+# CONFIG_ADE7854 is not set
+
+#
+# Resolver to digital converters
+#
+
+#
+# Triggers - standalone
+#
+# CONFIG_XVMALLOC is not set
+# CONFIG_ZRAM is not set
+# CONFIG_FB_SM7XX is not set
+# CONFIG_VIDEO_DT3155 is not set
+# CONFIG_CRYSTALHD is not set
+# CONFIG_FB_XGI is not set
+# CONFIG_EASYCAP is not set
+# CONFIG_SOLO6X10 is not set
+# CONFIG_ATH6K_LEGACY is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+# CONFIG_SPEAKUP is not set
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_ALTERA_STAPL is not set
+# CONFIG_MFD_NVEC is not set
+CONFIG_CLKDEV_LOOKUP=y
+CONFIG_CLKSRC_MMIO=y
+CONFIG_IOMMU_SUPPORT=y
+# CONFIG_TEGRA_IOMMU_SMMU is not set
+# CONFIG_VIRT_DRIVERS is not set
+CONFIG_RIL=y
+CONFIG_ASUS_GPS=y
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=y
+# CONFIG_EXT3_DEFAULTS_TO_ORDERED is not set
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_FS_XATTR=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+# CONFIG_EXT4_FS_SECURITY is not set
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+CONFIG_FS_POSIX_ACL=y
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+# CONFIG_QUOTACTL is not set
+# CONFIG_AUTOFS4_FS is not set
+CONFIG_FUSE_FS=y
+# CONFIG_CUSE is not set
+CONFIG_GENERIC_ACL=y
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+# CONFIG_MSDOS_FS is not set
+CONFIG_VFAT_FS=y
+# CONFIG_VFAT_FS_DUALNAMES is not set
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_NTFS_FS=y
+# CONFIG_NTFS_DEBUG is not set
+# CONFIG_NTFS_RW is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_VMCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_REPORT_PRESENT_CPUS=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+# CONFIG_HUGETLB_PAGE is not set
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_LOGFS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+# CONFIG_PSTORE is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_V4_1=y
+CONFIG_PNFS_FILE_LAYOUT=y
+CONFIG_PNFS_BLOCK=m
+CONFIG_ROOT_NFS=y
+# CONFIG_NFS_USE_LEGACY_DNS is not set
+CONFIG_NFS_USE_KERNEL_DNS=y
+# CONFIG_NFS_USE_NEW_IDMAPPER is not set
+# CONFIG_NFSD is not set
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_SUNRPC_BACKCHANNEL=y
+# CONFIG_CEPH_FS is not set
+# CONFIG_CIFS is not set
+# CONFIG_NCP_FS is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_OSF_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+# CONFIG_MAC_PARTITION is not set
+CONFIG_MSDOS_PARTITION=y
+# CONFIG_BSD_DISKLABEL is not set
+# CONFIG_MINIX_SUBPARTITION is not set
+# CONFIG_SOLARIS_X86_PARTITION is not set
+# CONFIG_UNIXWARE_DISKLABEL is not set
+# CONFIG_LDM_PARTITION is not set
+# CONFIG_SGI_PARTITION is not set
+# CONFIG_ULTRIX_PARTITION is not set
+# CONFIG_SUN_PARTITION is not set
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+CONFIG_NLS_UTF8=y
+
+#
+# Kernel hacking
+#
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+CONFIG_DEBUG_SECTION_MISMATCH=y
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+# CONFIG_DETECT_HUNG_TASK is not set
+CONFIG_SCHED_DEBUG=y
+CONFIG_SCHEDSTATS=y
+CONFIG_TIMER_STATS=y
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_DEBUG_SLAB is not set
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_PREEMPT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+CONFIG_DEBUG_VM=y
+# CONFIG_DEBUG_WRITECOUNT is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+CONFIG_RCU_CPU_STALL_VERBOSE=y
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_CPU_NOTIFIER_ERROR_INJECT is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_SYSCTL_SYSCALL_CHECK is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_EVENT_POWER_TRACING_DEPRECATED=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+CONFIG_FUNCTION_TRACER=y
+# CONFIG_FUNCTION_GRAPH_TRACER is not set
+# CONFIG_IRQSOFF_TRACER is not set
+# CONFIG_PREEMPT_TRACER is not set
+# CONFIG_SCHED_TRACER is not set
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+# CONFIG_BLK_DEV_IO_TRACE is not set
+CONFIG_DYNAMIC_FTRACE=y
+# CONFIG_FUNCTION_PROFILER is not set
+CONFIG_FTRACE_MCOUNT_RECORD=y
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_TRACELEVEL is not set
+CONFIG_TRACEDUMP=y
+# CONFIG_TRACEDUMP_PANIC is not set
+CONFIG_TRACEDUMP_PROCFS=y
+CONFIG_DYNAMIC_DEBUG=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_STRICT_DEVMEM is not set
+CONFIG_ARM_UNWIND=y
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_LL is not set
+# CONFIG_OC_ETM is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+CONFIG_TRUSTED_FOUNDATIONS=y
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_DEFAULT_SECURITY=""
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+CONFIG_CRYPTO_GF128MUL=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+CONFIG_CRYPTO_XTS=y
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA512=y
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ARC4=y
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+CONFIG_CRYPTO_SERPENT=y
+# CONFIG_CRYPTO_TEA is not set
+CONFIG_CRYPTO_TWOFISH=y
+CONFIG_CRYPTO_TWOFISH_COMMON=y
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_USER_API_HASH is not set
+# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_HIFN_795X is not set
+# CONFIG_CRYPTO_DEV_TEGRA_AES is not set
+CONFIG_CRYPTO_DEV_TEGRA_SE=y
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_GENERIC=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+# CONFIG_XZ_DEC is not set
+# CONFIG_XZ_DEC_BCJ is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_REED_SOLOMON=y
+CONFIG_REED_SOLOMON_ENC8=y
+CONFIG_REED_SOLOMON_DEC8=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=y
+CONFIG_TEXTSEARCH_BM=y
+CONFIG_TEXTSEARCH_FSM=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CPU_RMAP=y
+CONFIG_NLATTR=y
+CONFIG_AVERAGE=y
+# CONFIG_CORDIC is not set
diff -ur stock-kernel/arch/arm/Kconfig linux/arch/arm/Kconfig
--- stock-kernel/arch/arm/Kconfig	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/Kconfig	2013-03-09 14:06:35.550003969 +0100
@@ -2011,6 +2011,32 @@
 	  Should the atags used to boot the kernel be exported in an "atags"
 	  file in procfs. Useful with kexec.
 
+config KEXEC_HARDBOOT
+	bool "Support hard booting to a kexec kernel"
+	depends on KEXEC
+	help
+		Allows hard booting (i.e., with a full hardware reboot) to a kernel
+		previously loaded in memory by kexec.  This works around the problem of
+		soft-booted kernel hangs due to improper device shutdown and/or
+		reinitialization.  Support is comprised of two components:
+
+		First, a "hardboot" flag is added to the kexec syscall to force a hard
+		reboot in relocate_new_kernel() (which requires machine-specific assembly
+		code).  This also requires the kexec userspace tool to load the kexec'd
+		kernel in memory region left untouched by the bootloader (i.e., not
+		explicitly cleared and not overwritten by the boot kernel).  Just prior
+		to reboot, the kexec kernel arguments are stashed in a machine-specific
+		memory page that must also be preserved.  Note that this hardboot page
+		need not be reserved during regular kernel execution.
+
+		Second, the zImage decompresor of the boot (bootloader-loaded) kernel is
+		modified to check the hardboot page for fresh kexec arguments, and if
+		present, attempts to jump to the kexec'd kernel preserved in memory.
+
+		Note that hardboot support is only required in the boot kernel and any
+		kernel capable of performing a hardboot kexec.  It is _not_ required by a
+		kexec'd kernel.
+
 config CRASH_DUMP
 	bool "Build kdump crash kernel (EXPERIMENTAL)"
 	depends on EXPERIMENTAL
diff -ur stock-kernel/arch/arm/boot/compressed/Makefile linux/arch/arm/boot/compressed/Makefile
--- stock-kernel/arch/arm/boot/compressed/Makefile	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/boot/compressed/Makefile	2013-03-09 14:09:52.980008748 +0100
@@ -111,6 +111,9 @@
 ifeq ($(CONFIG_CPU_ENDIAN_BE8),y)
 LDFLAGS_vmlinux += --be8
 endif
+ifneq ($(PARAMS_PHYS),)
+LDFLAGS_vmlinux += --defsym params_phys=$(PARAMS_PHYS)
+endif
 # ?
 LDFLAGS_vmlinux += -p
 # Report unresolved symbol references
diff -ur stock-kernel/arch/arm/boot/compressed/head.S linux/arch/arm/boot/compressed/head.S
--- stock-kernel/arch/arm/boot/compressed/head.S	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/boot/compressed/head.S	2013-03-09 15:53:57.800004675 +0100
@@ -9,6 +9,12 @@
  * published by the Free Software Foundation.
  */
 #include <linux/linkage.h>
+#include <asm/memory.h>
+
+#ifdef CONFIG_KEXEC_HARDBOOT
+#include <asm/kexec.h>
+#endif
+
 
 /*
  * Debugging stuff
@@ -133,7 +139,31 @@
 		.word	_edata			@ zImage end address
  THUMB(		.thumb			)
 1:		mov	r7, r1			@ save architecture ID
-		mov	r8, r2			@ save atags pointer
+			teq     r0, #0                  @ Check for kexec_boot_atags.
+			movne   r8, r0                  @ Save kexec_boot_tags.
+			moveq   r8, r2                  @ save atags pointer
+
+#ifdef CONFIG_KEXEC_HARDBOOT
+			/* Check hardboot page for a kexec kernel. */
+			ldr     r3, =KEXEC_HB_PAGE_ADDR
+			ldr     r0, [r3]
+			ldr     r1, =KEXEC_HB_PAGE_MAGIC
+			teq     r0, r1
+			bne     not_booting_other
+
+			/* Clear hardboot page magic to avoid boot loop. */
+			mov     r0, #0
+			str     r0, [r3]
+
+			/* Load boot arguments and jump to kexec kernel. */
+			ldr     r0, [r3, #12]   @ kexec_boot_atags (r2: boot_atags)
+			ldr     r1, [r3, #8]    @ kexec_mach_type
+			ldr     pc, [r3, #4]    @ kexec_start_address
+
+			.ltorg
+
+not_booting_other:
+#endif
 
 #ifndef __ARM_ARCH_2__
 		/*
@@ -348,6 +378,44 @@
 		add	r2, sp, #0x10000	@ 64k max
 		mov	r3, r7
 		bl	decompress_kernel
+
+/* Copy the kernel tagged list (atags):
+ *
+ * The kernel requires atags to be located in a direct-mapped region,
+ * usually below the kernel in the first 16 kB of RAM.  If they're above
+ * (the start of) the kernel, they need to be copied to a suitable
+ * location, e.g., the machine-defined params_phys.
+ *
+ * The assumption is that the tags will only be "out of place" if the
+ * decompressor code is also, so copying is implemented only in the "won't
+ * overwrite" case (which should be fixed).  Still need to make sure that
+ * the copied tags don't overwrite either the kernel or decompressor code
+ * (or rather, the remainder of it since everything up to here has already
+ * been executed).
+ *
+ * r4: zreladdr (kernel start)
+ * r8: atags */
+
+		/* Don't need to copy atags if they're already below the kernel. */
+		cmp     r8, r4
+		blo     call_kernel
+
+		/* r1: min(zreladdr, pc) */
+		mov     r1, pc
+		cmp     r4, r1
+		movlo   r1, r4
+
+		/* Compute max space for atags, if max <= 0 don't copy. */
+		ldr     r0, =params_phys        @ dest
+		subs    r2, r1, r0              @ max = min(zreladdr, pc) - dest
+		bls     call_kernel
+
+		/* Copy atags to params_phys. */
+		mov     r1, r8                  @ src
+		bl      copy_atags
+		mov     r8, r0
+
+call_kernel:
 		bl	cache_clean_flush
 		bl	cache_off
 		mov	r0, #0			@ must be zero
@@ -356,6 +424,8 @@
  ARM(		mov	pc, r4	)		@ call kernel
  THUMB(		bx	r4	)		@ entry point is always ARM
 
+		.ltorg
+
 		.align	2
 		.type	LC0, #object
 LC0:		.word	LC0			@ r1
@@ -467,9 +537,14 @@
  * bits for the RAM area only.
  */
 		mov	r0, r3
+#if defined(PLAT_PHYS_OFFSET) && defined(END_MEM)
+		mov     r9, #PLAT_PHYS_OFFSET   @ start of RAM
+		mov     r10, #END_MEM           @ end of RAM
+#else
 		mov	r9, r0, lsr #18
 		mov	r9, r9, lsl #18		@ start of RAM
 		add	r10, r9, #0x10000000	@ a reasonable RAM size
+#endif
 		mov	r1, #0x12
 		orr	r1, r1, #3 << 10
 		add	r2, r3, #16384
@@ -688,7 +763,7 @@
 		W(b)	__armv3_mpu_cache_on
 		W(b)	__armv3_mpu_cache_off
 		W(b)	__armv3_mpu_cache_flush
-		
+
 		.word	0x41009400		@ ARM94x
 		.word	0xff00ff00
 		W(b)	__armv4_mpu_cache_on
@@ -915,7 +990,7 @@
 		mcrne	p15, 0, ip, c7, c5, 0	@ invalidate I cache
 		mcr	p15, 0, ip, c7, c10, 4	@ drain WB
 		mov	pc, lr
-		
+
 __fa526_cache_flush:
 		mov	r1, #0
 		mcr	p15, 0, r1, c7, c14, 0	@ clean and invalidate D cache
diff -ur stock-kernel/arch/arm/boot/compressed/misc.c linux/arch/arm/boot/compressed/misc.c
--- stock-kernel/arch/arm/boot/compressed/misc.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/boot/compressed/misc.c	2013-03-09 15:55:22.890000001 +0100
@@ -1,7 +1,7 @@
 /*
  * misc.c
- * 
- * This is a collection of several routines from gzip-1.0.3 
+ *
+ * This is a collection of several routines from gzip-1.0.3
  * adapted for Linux.
  *
  * malloc by Hannu Savolainen 1993 and Matthias Urlichs 1994
@@ -10,7 +10,7 @@
  *
  * Nicolas Pitre <nico@visuaide.com>  1999/04/14 :
  *  For this code to run directly from Flash, all constant variables must
- *  be marked with 'const' and all other variables initialized at run-time 
+ *  be marked with 'const' and all other variables initialized at run-time
  *  only.  This way all non constant variables will end up in the bss segment,
  *  which should point to addresses in RAM and cleared to 0 on start.
  *  This allows for a much quicker boot time.
@@ -25,6 +25,7 @@
 #include <linux/stddef.h>	/* for NULL */
 #include <linux/linkage.h>
 #include <asm/string.h>
+#include <asm/setup.h>
 
 
 static void putstr(const char *ptr);
@@ -192,3 +193,25 @@
 	else
 		putstr(" done, booting the kernel.\n");
 }
+
+const struct tag *copy_atags(struct tag *dest, const struct tag *src,
+                             size_t max)
+{
+       struct tag *tag;
+       size_t      size;
+
+       /* Find the last tag (ATAG_NONE). */
+       for_each_tag(tag, (struct tag *)src)
+               continue;
+
+       /* Include the last tag in copy. */
+       size = (char *)tag - (char *)src + sizeof(struct tag_header);
+
+       /* If there's not enough room, just use original and hope it works. */
+       if (size > max)
+               return src;
+
+       memcpy(dest, src, size);
+
+       return dest;
+}
\ Manca newline alla fine del file
diff -ur stock-kernel/arch/arm/include/asm/kexec.h linux/arch/arm/include/asm/kexec.h
--- stock-kernel/arch/arm/include/asm/kexec.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/include/asm/kexec.h	2013-03-09 15:56:32.340004148 +0100
@@ -17,6 +17,10 @@
 #define KEXEC_ARM_ATAGS_OFFSET  0x1000
 #define KEXEC_ARM_ZIMAGE_OFFSET 0x8000
 
+#ifdef CONFIG_KEXEC_HARDBOOT
+#define KEXEC_HB_PAGE_MAGIC 0x4a5db007
+#endif
+
 #ifndef __ASSEMBLY__
 
 /**
diff -ur stock-kernel/arch/arm/kernel/machine_kexec.c linux/arch/arm/kernel/machine_kexec.c
--- stock-kernel/arch/arm/kernel/machine_kexec.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/kernel/machine_kexec.c	2013-03-09 16:00:17.560000482 +0100
@@ -13,6 +13,10 @@
 #include <asm/cacheflush.h>
 #include <asm/mach-types.h>
 
+#if defined(CONFIG_KEXEC_HARDBOOT) && defined(CONFIG_ARCH_S5PV210)
+#include <mach/regs-clock.h>
+#endif
+
 extern const unsigned char relocate_new_kernel[];
 extern const unsigned int relocate_new_kernel_size;
 
@@ -22,6 +26,9 @@
 extern unsigned long kexec_indirection_page;
 extern unsigned long kexec_mach_type;
 extern unsigned long kexec_boot_atags;
+#ifdef CONFIG_KEXEC_HARDBOOT
+extern unsigned long kexec_hardboot;
+#endif
 
 static atomic_t waiting_for_crash_ipi;
 
@@ -99,6 +106,9 @@
 	kexec_indirection_page = page_list;
 	kexec_mach_type = machine_arch_type;
 	kexec_boot_atags = image->start - KEXEC_ARM_ZIMAGE_OFFSET + KEXEC_ARM_ATAGS_OFFSET;
+#ifdef CONFIG_KEXEC_HARDBOOT
+	kexec_hardboot = image->hardboot;
+#endif
 
 	/* copy our kernel relocation code to the control code page */
 	memcpy(reboot_code_buffer,
@@ -118,7 +128,7 @@
 	outer_flush_all();
 	outer_disable();
 	cpu_proc_fin();
-	outer_inv_all();
-	flush_cache_all();
-	cpu_reset(reboot_code_buffer_phys);
+  /* Must call cpu_reset via physical address since ARMv7 (& v6) stalls the
+   * pipeline after disabling the MMU. */
+	((typeof(cpu_reset) *)virt_to_phys(cpu_reset))(reboot_code_buffer_phys);
 }
diff -ur stock-kernel/arch/arm/kernel/relocate_kernel.S linux/arch/arm/kernel/relocate_kernel.S
--- stock-kernel/arch/arm/kernel/relocate_kernel.S	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/kernel/relocate_kernel.S	2013-03-09 16:03:33.900006516 +0100
@@ -4,6 +4,16 @@
 
 #include <asm/kexec.h>
 
+#ifdef CONFIG_KEXEC_HARDBOOT
+#include <asm/memory.h>
+#ifdef CONFIG_ARCH_S5PV210
+#include <mach/map.h>
+#endif
+#if defined(CONFIG_ARCH_TEGRA_2x_SOC) || defined(CONFIG_ARCH_TEGRA_3x_SOC)
+#include <mach/iomap.h>
+#endif
+#endif
+
 	.globl relocate_new_kernel
 relocate_new_kernel:
 
@@ -52,6 +62,11 @@
 	b 0b
 
 2:
+#ifdef CONFIG_KEXEC_HARDBOOT
+	ldr     r0, kexec_hardboot
+	teq     r0, #0
+	bne     hardboot
+#endif
 	/* Jump to relocated kernel */
 	mov lr,r1
 	mov r0,#0
@@ -60,6 +75,47 @@
  ARM(	mov pc, lr	)
  THUMB(	bx lr		)
 
+#ifdef CONFIG_KEXEC_HARDBOOT
+hardboot:
+       /* Stash boot arguments in hardboot page:
+        *  0: KEXEC_HB_PAGE_MAGIC
+        *  4: kexec_start_address
+        *  8: kexec_mach_type
+        * 12: kexec_boot_atags */
+       ldr     r0, =KEXEC_HB_PAGE_ADDR
+       str     r1, [r0, #4]
+       ldr     r1, kexec_mach_type
+       str     r1, [r0, #8]
+       ldr     r1, kexec_boot_atags
+       str     r1, [r0, #12]
+       ldr     r1, =KEXEC_HB_PAGE_MAGIC
+       str     r1, [r0]
+
+#if defined(CONFIG_ARCH_S5PV210)
+       /* Hard reset via watchdog, decompressor jumps to kernel. */
+       ldr     r0, =S3C_PA_WDT
+       mov     r1, #0x8000
+       str     r1, [r0, #4]
+       mov     r1, #1
+       str     r1, [r0, #4]
+       mov     r1, #8
+       str     r1, [r0, #8]
+       movw    r1, #0x8021
+       str     r1, [r0]
+loop:  b       loop
+#elif defined(CONFIG_ARCH_TEGRA_2x_SOC) || defined(CONFIG_ARCH_TEGRA_3x_SOC)
+       ldr     r0, =TEGRA_PMC_BASE
+       ldr     r1, [r0]
+       orr     r1, r1, #0x10
+       str     r1, [r0]
+loop:  b       loop
+#else
+#error "No reboot method defined for hardboot."
+#endif
+
+       .ltorg
+#endif
+
 	.align
 
 	.globl kexec_start_address
@@ -78,6 +134,11 @@
 	.globl kexec_boot_atags
 kexec_boot_atags:
 	.long	0x0
+#ifdef CONFIG_KEXEC_HARDBOOT
+	.globl kexec_hardboot
+kexec_hardboot:
+	.long   0x0
+#endif
 
 relocate_new_kernel_end:
 
diff -ur stock-kernel/arch/arm/mach-tegra/board-cardhu.c linux/arch/arm/mach-tegra/board-cardhu.c
--- stock-kernel/arch/arm/mach-tegra/board-cardhu.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/mach-tegra/board-cardhu.c	2013-03-09 16:24:42.580018735 +0100
@@ -1107,8 +1107,8 @@
             gpio_direction_input(TEGRA_GPIO_PO7);
             printk("TF500T: TP vender ID0=%d, TP vender ID1=%d\n", gpio_get_value(TEGRA_GPIO_PBB7), gpio_get_value(TEGRA_GPIO_PO7));
 #if defined(CONFIG_TOUCHSCREEN_SIS_I2C)
-	    i2c_register_board_info(TOUCH_BUS_ATMEL_T9, sis9200_i2c2_boardinfo, 1);	
-#endif 
+	    i2c_register_board_info(TOUCH_BUS_ATMEL_T9, sis9200_i2c2_boardinfo, 1);
+#endif
 	    break;
 	case TEGRA3_PROJECT_TF700T:
 #if defined(CONFIG_TOUCHSCREEN_ELAN_TF_3K)
@@ -1674,7 +1674,7 @@
 #else
 	tegra_reserve(SZ_128M, SZ_8M, SZ_8M);
 #endif
-	tegra_ram_console_debug_reserve(SZ_1M);
+	tegra_ram_console_debug_reserve((SZ_1M)*2); // 1M for kexec stuff
 }
 
 MACHINE_START(CARDHU, "cardhu")
diff -ur stock-kernel/arch/arm/mach-tegra/include/mach/memory.h linux/arch/arm/mach-tegra/include/mach/memory.h
--- stock-kernel/arch/arm/mach-tegra/include/mach/memory.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/arch/arm/mach-tegra/include/mach/memory.h	2013-03-09 16:30:49.219963731 +0100
@@ -25,8 +25,16 @@
 /* physical offset of RAM */
 #if defined(CONFIG_ARCH_TEGRA_2x_SOC)
 #define PLAT_PHYS_OFFSET		UL(0)
+#define END_MEM                                UL(0x40000000)
+#if defined(CONFIG_KEXEC_HARDBOOT)
+#define KEXEC_HB_PAGE_ADDR             UL(0x3FE00000)
+#endif
 #else
 #define PLAT_PHYS_OFFSET		UL(0x80000000)
+#define END_MEM                                UL(0xC0000000)
+#if defined(CONFIG_KEXEC_HARDBOOT)
+#define KEXEC_HB_PAGE_ADDR             UL(0xBEC00000)
+#endif
 #endif
 
 /*
diff -ur stock-kernel/drivers/input/asusec/asusdec.c linux/drivers/input/asusec/asusdec.c
--- stock-kernel/drivers/input/asusec/asusdec.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/asusec/asusdec.c	2013-02-28 17:00:42.310000656 +0100
@@ -1,4 +1,4 @@
-/* 
+/*
  * ASUS Dock EC driver.
  */
 
@@ -45,13 +45,14 @@
 static int __devinit asusdec_probe(struct i2c_client *client,
 		const struct i2c_device_id *id);
 static int __devexit asusdec_remove(struct i2c_client *client);
-static int asusdec_kp_key_mapping(int x);
 static ssize_t asusdec_show_dock(struct device *class,
 		struct device_attribute *attr,char *buf);
 static ssize_t asusdec_show(struct device *class,
 		struct device_attribute *attr,char *buf);
 static ssize_t asusdec_tp_status_show(struct device *class,
 		struct device_attribute *attr,char *buf);
+static ssize_t asusdec_tp_enable_show(struct device *class,
+		struct device_attribute *attr,char *buf);
 static ssize_t asusdec_info_show(struct device *class,
 		struct device_attribute *attr,char *buf);
 static ssize_t asusdec_store_led(struct device *class,
@@ -95,7 +96,7 @@
 static int asusdec_lid_input_device_create(struct i2c_client *client);
 static ssize_t asusdec_switch_name(struct switch_dev *sdev, char *buf);
 static ssize_t asusdec_switch_state(struct switch_dev *sdev, char *buf);
-static int asusdec_event(struct input_dev *dev, unsigned int type, unsigned int code, int value);	
+static int asusdec_event(struct input_dev *dev, unsigned int type, unsigned int code, int value);
 static int asusdec_dock_battery_get_capacity(union power_supply_propval *val);
 static int asusdec_dock_battery_get_status(union power_supply_propval *val);
 static int asusdec_dock_battery_get_property(struct power_supply *psy,
@@ -201,6 +202,7 @@
 
 static DEVICE_ATTR(ec_status, S_IWUSR | S_IRUGO, asusdec_show,NULL);
 static DEVICE_ATTR(ec_tp_status, S_IWUSR | S_IRUGO, asusdec_tp_status_show,NULL);
+static DEVICE_ATTR(ec_tp_enable, S_IWUSR | S_IRUGO, asusdec_tp_enable_show,NULL);
 static DEVICE_ATTR(ec_info, S_IWUSR | S_IRUGO, asusdec_info_show,NULL);
 static DEVICE_ATTR(ec_dock, S_IWUSR | S_IRUGO, asusdec_show_dock,NULL);
 static DEVICE_ATTR(ec_dock_led, S_IWUSR | S_IRUGO, asusdec_led_show,asusdec_store_led);
@@ -217,6 +219,7 @@
 static struct attribute *asusdec_smbus_attributes[] = {
 	&dev_attr_ec_status.attr,
 	&dev_attr_ec_tp_status.attr,
+	&dev_attr_ec_tp_enable.attr,
 	&dev_attr_ec_info.attr,
 	&dev_attr_ec_dock.attr,
 	&dev_attr_ec_dock_led.attr,
@@ -237,20 +240,13 @@
 	.attrs = asusdec_smbus_attributes,
 };
 
-static int asusdec_kp_sci_table[]={0, KEY_SLEEP, KEY_WLAN, KEY_BLUETOOTH, 
-		ASUSDEC_KEY_TOUCHPAD, KEY_BRIGHTNESSDOWN, KEY_BRIGHTNESSUP, ASUSDEC_KEY_AUTOBRIGHT, 
-		KEY_CAMERA, -9, -10, -11, 
-		-12, -13, -14, -15, 
-		KEY_WWW, ASUSDEC_KEY_SETTING, KEY_PREVIOUSSONG, KEY_PLAYPAUSE, 
-		KEY_NEXTSONG, KEY_MUTE, KEY_VOLUMEDOWN, KEY_VOLUMEUP};
-
 /*
  * functions definition
  */
 static void asusdec_dockram_init(struct i2c_client *client){
 	dockram_client.adapter = client->adapter;
 	dockram_client.addr = 0x1b;
-	dockram_client.detected = client->detected; 
+	dockram_client.detected = client->detected;
 	dockram_client.dev = client->dev;
 	dockram_client.driver = client->driver;
 	dockram_client.flags = client->flags;
@@ -279,7 +275,7 @@
 	if (ec_chip->dock_in == 0){
 		return -1;
 	}
-	
+
 	ret = i2c_smbus_read_i2c_block_data(&dockram_client, cmd, 32, ec_chip->i2c_dm_data);
 	if (ret < 0) {
 		ASUSDEC_ERR("Fail to read dockram data, status %d\n", ret);
@@ -322,20 +318,20 @@
 	int retry = ASUSDEC_RETRY_COUNT;
 
 	while(retry-- > 0){
-		asusdec_i2c_read_data(client);		
+		asusdec_i2c_read_data(client);
 		ASUSDEC_I2C_DATA(ec_chip->i2c_data, ec_chip->index);
-		if ((ec_chip->i2c_data[1] & ASUSDEC_OBF_MASK) && 
-			(!(ec_chip->i2c_data[1] & ASUSDEC_AUX_MASK))){ 
+		if ((ec_chip->i2c_data[1] & ASUSDEC_OBF_MASK) &&
+			(!(ec_chip->i2c_data[1] & ASUSDEC_AUX_MASK))){
 			if (ec_chip->i2c_data[2]  == res){
 				goto get_asusdec_keypad_i2c;
 			}
-		}		
+		}
 		msleep(CONVERSION_TIME_MS/5);
 	}
 	return -1;
 
 get_asusdec_keypad_i2c:
-	return 0;	
+	return 0;
 
 }
 
@@ -344,7 +340,7 @@
 	int retry = ASUSDEC_RETRY_COUNT;
 
 	while(retry-- > 0){
-		asusdec_i2c_write_data(client, 0xF400);		
+		asusdec_i2c_write_data(client, 0xF400);
 		if(!asusdec_keypad_get_response(client, ASUSDEC_PS2_ACK)){
 			goto keypad_enable_ok;
 		}
@@ -357,8 +353,8 @@
 }
 
 static int asusdec_keypad_disable(struct i2c_client *client)
-{	
-	int retry = ASUSDEC_RETRY_COUNT;	
+{
+	int retry = ASUSDEC_RETRY_COUNT;
 
 	while(retry-- > 0){
 		asusdec_i2c_write_data(client, 0xF500);
@@ -375,7 +371,7 @@
 }
 
 static void asusdec_keypad_led_on(struct work_struct *dat)
-{	
+{
 	ec_chip->kbc_value = 1;
 	ASUSDEC_INFO("send led cmd 1\n");
 	msleep(250);
@@ -384,7 +380,7 @@
 
 
 static void asusdec_keypad_led_off(struct work_struct *dat)
-{	
+{
 	ec_chip->kbc_value = 0;
 	ASUSDEC_INFO("send led cmd 1\n");
 	msleep(250);
@@ -400,12 +396,12 @@
 	while(retry-- > 0){
 		asusdec_i2c_read_data(client);
 		ASUSDEC_I2C_DATA(ec_chip->i2c_data, ec_chip->index);
-		if ((ec_chip->i2c_data[1] & ASUSDEC_OBF_MASK) && 
-			(ec_chip->i2c_data[1] & ASUSDEC_AUX_MASK)){ 
+		if ((ec_chip->i2c_data[1] & ASUSDEC_OBF_MASK) &&
+			(ec_chip->i2c_data[1] & ASUSDEC_AUX_MASK)){
 			if (ec_chip->i2c_data[2] == res){
 				goto get_asusdec_touchpad_i2c;
 			}
-		}		
+		}
 		msleep(CONVERSION_TIME_MS/5);
 	}
 
@@ -413,20 +409,20 @@
 	return -1;
 
 get_asusdec_touchpad_i2c:
-	return 0;	
+	return 0;
 
 }
 
 static int asusdec_touchpad_enable(struct i2c_client *client)
 {
-	ec_chip->tp_wait_ack = 1;		
+	ec_chip->tp_wait_ack = 1;
 	asusdec_i2c_write_data(client, 0xF4D4);
 	return 0;
 }
 
 static int asusdec_touchpad_disable(struct i2c_client *client)
-{	
-	int retry = 5;	
+{
+	int retry = 5;
 
 	while(retry-- > 0){
 		asusdec_i2c_write_data(client, 0xF5D4);
@@ -453,10 +449,10 @@
 static void asusdec_fw_reset_ec_op(void){
 	char i2c_data[32];
 	int i;
-	int r_data[32];
+	//int r_data[32];
 
 	asusdec_fw_clear_buf();
-	
+
 	i2c_data[0] = 0x01;
 	i2c_data[1] = 0x21;
 	for (i = 0; i < i2c_data[0]+1 ; i++){
@@ -468,7 +464,7 @@
 static void asusdec_fw_address_set_op(void){
 	char i2c_data[32];
 	int i;
-	int r_data[32];
+	//int r_data[32];
 
 	asusdec_fw_clear_buf();
 
@@ -487,7 +483,7 @@
 static void asusdec_fw_enter_op(void){
 	char i2c_data[32];
 	int i;
-	int r_data[32];
+	//int r_data[32];
 
 	asusdec_fw_clear_buf();
 
@@ -558,14 +554,14 @@
 
 static void asusdec_reset_dock(void){
 	ec_chip->dock_init = 0;
-	ASUSDEC_NOTICE("send EC_Request\n");	
+	ASUSDEC_NOTICE("send EC_Request\n");
 	gpio_set_value(asusdec_ecreq_gpio, 0);
 	msleep(20);
-	gpio_set_value(asusdec_ecreq_gpio, 1);		
+	gpio_set_value(asusdec_ecreq_gpio, 1);
 }
 static int asusdec_is_init_running(void){
 	int ret_val;
-	
+
 	mutex_lock(&ec_chip->dock_init_lock);
 	ret_val = ec_chip->dock_init;
 	ec_chip->dock_init = 1;
@@ -586,7 +582,7 @@
 
 	if(asusdec_is_init_running()){
 		return 0;
-	}	
+	}
 
 	wake_lock(&ec_chip->wake_lock);
 	memset(ec_chip->ec_model_name, 0, 32);
@@ -602,29 +598,29 @@
 	}
 	if(ret_val < 0){
 		goto fail_to_access_ec;
-	}	
+	}
 
 	for ( i=0; i<8; i++){
 		asusdec_i2c_read_data(client);
 	}
-	
+
 	if (asusdec_dockram_read_data(0x01) < 0){
 		goto fail_to_access_ec;
 	}
 	strcpy(ec_chip->ec_model_name, &ec_chip->i2c_dm_data[1]);
 	ASUSDEC_NOTICE("Model Name: %s\n", ec_chip->ec_model_name);
-	
+
 	if (asusdec_dockram_read_data(0x02) < 0){
 		goto fail_to_access_ec;
 	}
 	strcpy(ec_chip->ec_version, &ec_chip->i2c_dm_data[1]);
 	ASUSDEC_NOTICE("EC-FW Version: %s\n", ec_chip->ec_version);
-	
+
 	if (asusdec_dockram_read_data(0x03) < 0){
 		goto fail_to_access_ec;
 	}
 	ASUSDEC_INFO("EC-Config Format: %s\n", &ec_chip->i2c_dm_data[1]);
-	
+
 	if (asusdec_dockram_read_data(0x04) < 0){
 		goto fail_to_access_ec;
 	}
@@ -656,7 +652,7 @@
 	}
 
 	asusdec_keypad_disable(client);
-	
+
 #if TOUCHPAD_ELAN
 #if TOUCHPAD_MODE
 	if (1){
@@ -675,20 +671,20 @@
 
 	asusdec_keypad_enable(client);
 	asusdec_clear_i2c_buffer(client);
-	
+
 	enable_irq(gpio_to_irq(asusdec_apwake_gpio));
 	ec_chip->init_success = 1;
 
 	if ((201) && ec_chip->tp_enable){
 		asusdec_touchpad_enable(client);
-	}	
+	}
 
 	ec_chip->status = 1;
 	asusdec_dock_status_report();
 	wake_unlock(&ec_chip->wake_lock);
 	return 0;
 
-fail_to_access_ec:	
+fail_to_access_ec:
 	if (asusdec_dockram_read_data(0x00) < 0){
 		ASUSDEC_NOTICE("No EC detected\n");
 		ec_chip->dock_in = 0;
@@ -710,7 +706,7 @@
 	if (gpio == asusdec_apwake_gpio){
 		disable_irq_nosync(irq);
 		if (ec_chip->op_mode){
-			queue_delayed_work(asusdec_wq, &ec_chip->asusdec_fw_update_work, 0);			
+			queue_delayed_work(asusdec_wq, &ec_chip->asusdec_fw_update_work, 0);
 		}
 		else if ((ec_chip->dock_type == AUDIO_DOCK)||(ec_chip->dock_type == AUDIO_STAND)){
 			queue_delayed_work(asusdec_wq, &ec_chip->asusdec_audio_work, 0);
@@ -730,7 +726,7 @@
 	} else if (gpio == asusdec_hall_sensor_gpio){
 		queue_delayed_work(asusdec_wq, &ec_chip->asusdec_hall_sensor_work, 0);
 	}
-	return IRQ_HANDLED;	
+	return IRQ_HANDLED;
 }
 
 static int asusdec_irq_hall_sensor(struct i2c_client *client)
@@ -759,7 +755,7 @@
 
 	rc = request_irq(irq, asusdec_interrupt_handler,IRQF_SHARED|IRQF_TRIGGER_RISING|IRQF_TRIGGER_FALLING/*|IRQF_TRIGGER_HIGH|IRQF_TRIGGER_LOW*/, label, client);
 	if (rc < 0) {
-		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);	
+		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);
 		rc = -EIO;
 		goto err_gpio_request_irq_fail ;
 	}
@@ -792,7 +788,7 @@
 	int rc = 0 ;
 	unsigned gpio = asusdec_dock_in_gpio;
 	unsigned irq = gpio_to_irq(asusdec_dock_in_gpio);
-	const char* label = "asusdec_dock_in" ; 
+	const char* label = "asusdec_dock_in" ;
 
 	ASUSDEC_INFO("gpio = %d, irq = %d\n", gpio, irq);
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
@@ -800,27 +796,27 @@
 	tegra_gpio_enable(gpio);
 	rc = gpio_request(gpio, label);
 	if (rc) {
-		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);		
+		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);
 	}
 
 	rc = gpio_direction_input(gpio) ;
 	if (rc) {
-		ASUSDEC_ERR("gpio_direction_input failed for input %d\n", gpio);			
+		ASUSDEC_ERR("gpio_direction_input failed for input %d\n", gpio);
 		goto err_gpio_direction_input_failed;
 	}
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
 
 	rc = request_irq(irq, asusdec_interrupt_handler,IRQF_SHARED|IRQF_TRIGGER_RISING|IRQF_TRIGGER_FALLING/*|IRQF_TRIGGER_HIGH|IRQF_TRIGGER_LOW*/, label, client);
 	if (rc < 0) {
-		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);	
+		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);
 		rc = -EIO;
 		goto err_gpio_request_irq_fail ;
-	}	
+	}
 	ASUSDEC_INFO("request irq = %d, rc = %d\n", irq, rc);
 
 	return 0 ;
 
-err_gpio_request_irq_fail :	
+err_gpio_request_irq_fail :
 	gpio_free(gpio);
 err_gpio_direction_input_failed:
 	return rc;
@@ -831,7 +827,7 @@
 	int rc = 0 ;
 	unsigned gpio = asusdec_apwake_gpio;
 	unsigned irq = gpio_to_irq(asusdec_apwake_gpio);
-	const char* label = "asusdec_input" ; 
+	const char* label = "asusdec_input" ;
 
 	ASUSDEC_INFO("gpio = %d, irq = %d\n", gpio, irq);
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
@@ -839,29 +835,29 @@
 	tegra_gpio_enable(gpio);
 	rc = gpio_request(gpio, label);
 	if (rc) {
-		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);		
+		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);
 		goto err_request_input_gpio_failed;
 	}
 
 	rc = gpio_direction_input(gpio) ;
 	if (rc) {
-		ASUSDEC_ERR("gpio_direction_input failed for input %d\n", gpio);			
+		ASUSDEC_ERR("gpio_direction_input failed for input %d\n", gpio);
 		goto err_gpio_direction_input_failed;
 	}
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
 
 	rc = request_irq(irq, asusdec_interrupt_handler,/*IRQF_TRIGGER_RISING|IRQF_TRIGGER_FALLING|IRQF_TRIGGER_HIGH|*/IRQF_TRIGGER_LOW, label, client);
 	if (rc < 0) {
-		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);	
+		ASUSDEC_ERR("Could not register for %s interrupt, irq = %d, rc = %d\n", label, irq, rc);
 		rc = -EIO;
 		goto err_gpio_request_irq_fail ;
 	}
 	enable_irq_wake(irq);
-	ASUSDEC_INFO("request irq = %d, rc = %d\n", irq, rc);	
+	ASUSDEC_INFO("request irq = %d, rc = %d\n", irq, rc);
 
 	return 0 ;
 
-err_gpio_request_irq_fail :	
+err_gpio_request_irq_fail :
 	gpio_free(gpio);
 err_gpio_direction_input_failed:
 err_request_input_gpio_failed :
@@ -872,8 +868,10 @@
 {
 	int rc = 0 ;
 	unsigned gpio = asusdec_ecreq_gpio;
+#if ASUSDEC_DEBUG
 	unsigned irq = gpio_to_irq(asusdec_apwake_gpio);
-	const char* label = "asusdec_request" ; 
+#endif
+	const char* label = "asusdec_request" ;
 
 	ASUSDEC_INFO("gpio = %d, irq = %d\n", gpio, irq);
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
@@ -881,17 +879,17 @@
 	tegra_gpio_enable(gpio);
 	rc = gpio_request(gpio, label);
 	if (rc) {
-		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);		
+		ASUSDEC_ERR("gpio_request failed for input %d\n", gpio);
 		goto err_exit;
 	}
 
 	rc = gpio_direction_output(gpio, 1) ;
 	if (rc) {
-		ASUSDEC_ERR("gpio_direction_output failed for input %d\n", gpio);			
+		ASUSDEC_ERR("gpio_direction_output failed for input %d\n", gpio);
 		goto err_exit;
 	}
 	ASUSDEC_INFO("GPIO = %d , state = %d\n", gpio, gpio_get_value(gpio));
-	
+
 	return 0 ;
 
 err_exit:
@@ -899,243 +897,26 @@
 }
 
 
-static int asusdec_kp_key_mapping(int x)
-{
-	switch (x){
-		case ASUSDEC_KEYPAD_ESC:
-			return KEY_BACK; 
-
-		case ASUSDEC_KEYPAD_KEY_WAVE:
-			return KEY_GRAVE;
-
-		case ASUSDEC_KEYPAD_KEY_1:
-			return KEY_1;
-
-		case ASUSDEC_KEYPAD_KEY_2:
-			return KEY_2;
-
-		case ASUSDEC_KEYPAD_KEY_3:
-			return KEY_3;
-
-		case ASUSDEC_KEYPAD_KEY_4:
-			return KEY_4;
-
-		case ASUSDEC_KEYPAD_KEY_5:
-			return KEY_5;
-
-		case ASUSDEC_KEYPAD_KEY_6:
-			return KEY_6;
-
-		case ASUSDEC_KEYPAD_KEY_7:
-			return KEY_7;
-
-		case ASUSDEC_KEYPAD_KEY_8:
-			return KEY_8;
-
-		case ASUSDEC_KEYPAD_KEY_9:
-			return KEY_9;
-
-		case ASUSDEC_KEYPAD_KEY_0:
-			return KEY_0;
-
-		case ASUSDEC_KEYPAD_KEY_MINUS:
-			return KEY_MINUS;
-
-		case ASUSDEC_KEYPAD_KEY_EQUAL:
-			return KEY_EQUAL;
-
-		case ASUSDEC_KEYPAD_KEY_BACKSPACE:
-			return KEY_BACKSPACE;
-
-		case ASUSDEC_KEYPAD_KEY_TAB:
-			return KEY_TAB;
-
-		case ASUSDEC_KEYPAD_KEY_Q:
-			return KEY_Q;
-
-		case ASUSDEC_KEYPAD_KEY_W:
-			return KEY_W;
-
-		case ASUSDEC_KEYPAD_KEY_E:
-			return KEY_E;
-
-		case ASUSDEC_KEYPAD_KEY_R:
-			return KEY_R;
-
-		case ASUSDEC_KEYPAD_KEY_T:
-			return KEY_T;
-
-		case ASUSDEC_KEYPAD_KEY_Y:
-			return KEY_Y;
-
-		case ASUSDEC_KEYPAD_KEY_U:
-			return KEY_U;
-
-		case ASUSDEC_KEYPAD_KEY_I:
-			return KEY_I;
-
-		case ASUSDEC_KEYPAD_KEY_O:
-			return KEY_O;
-
-		case ASUSDEC_KEYPAD_KEY_P:
-			return KEY_P;
-
-		case ASUSDEC_KEYPAD_KEY_LEFTBRACE:
-			return KEY_LEFTBRACE;
-
-		case ASUSDEC_KEYPAD_KEY_RIGHTBRACE:
-			return KEY_RIGHTBRACE;
-
-		case ASUSDEC_KEYPAD_KEY_BACKSLASH:
-			return KEY_BACKSLASH;
-
-		case ASUSDEC_KEYPAD_KEY_CAPSLOCK:
-			return KEY_CAPSLOCK;
-
-		case ASUSDEC_KEYPAD_KEY_A:
-			return KEY_A;
-
-		case ASUSDEC_KEYPAD_KEY_S:
-			return KEY_S;
-
-		case ASUSDEC_KEYPAD_KEY_D:
-			return KEY_D;
-
-		case ASUSDEC_KEYPAD_KEY_F:
-			return KEY_F;
-
-		case ASUSDEC_KEYPAD_KEY_G:
-			return KEY_G;
-
-		case ASUSDEC_KEYPAD_KEY_H:
-			return KEY_H;
-
-		case ASUSDEC_KEYPAD_KEY_J:
-			return KEY_J;
-
-		case ASUSDEC_KEYPAD_KEY_K:
-			return KEY_K;
-
-		case ASUSDEC_KEYPAD_KEY_L:
-			return KEY_L;
-
-		case ASUSDEC_KEYPAD_KEY_SEMICOLON:
-			return KEY_SEMICOLON;
-
-		case ASUSDEC_KEYPAD_KEY_APOSTROPHE:
-			return KEY_APOSTROPHE;
-
-		case ASUSDEC_KEYPAD_KEY_ENTER:
-			return KEY_ENTER;
-
-		case ASUSDEC_KEYPAD_KEY_LEFTSHIFT:
-			return KEY_LEFTSHIFT;
-
-		case ASUSDEC_KEYPAD_KEY_Z:
-			return KEY_Z;
-
-		case ASUSDEC_KEYPAD_KEY_X:
-			return KEY_X;
-
-		case ASUSDEC_KEYPAD_KEY_C:
-			return KEY_C;
-
-		case ASUSDEC_KEYPAD_KEY_V:
-			return KEY_V;
-
-		case ASUSDEC_KEYPAD_KEY_B:
-			return KEY_B;
-
-		case ASUSDEC_KEYPAD_KEY_N:
-			return KEY_N;
-
-		case ASUSDEC_KEYPAD_KEY_M:
-			return KEY_M;
-
-		case ASUSDEC_KEYPAD_KEY_COMMA:
-			return KEY_COMMA;
+static unsigned short default_keypad_mapping[] = {
 
-		case ASUSDEC_KEYPAD_KEY_DOT:
-			return KEY_DOT;
-
-		case ASUSDEC_KEYPAD_KEY_SLASH:
-			return KEY_SLASH;
-
-		case ASUSDEC_KEYPAD_KEY_RIGHTSHIFT:
-			return KEY_RIGHTSHIFT;
-
-		case ASUSDEC_KEYPAD_KEY_LEFT:
-			return KEY_LEFT;
-
-		case ASUSDEC_KEYPAD_KEY_RIGHT:
-			return KEY_RIGHT;
-
-		case ASUSDEC_KEYPAD_KEY_UP:
-			return KEY_UP;
-
-		case ASUSDEC_KEYPAD_KEY_DOWN:
-			return KEY_DOWN;
-
-		case ASUSDEC_KEYPAD_RIGHTWIN:
-			return KEY_SEARCH;
-
-		case ASUSDEC_KEYPAD_LEFTCTRL:
-			return KEY_LEFTCTRL;
-
-		case ASUSDEC_KEYPAD_LEFTWIN:
-			return KEY_HOMEPAGE;
-
-		case ASUSDEC_KEYPAD_LEFTALT:
-			return KEY_LEFTALT;
-
-		case ASUSDEC_KEYPAD_KEY_SPACE:
-			return KEY_SPACE;
-
-		case ASUSDEC_KEYPAD_RIGHTALT:
-			return KEY_RIGHTALT;
-
-		case ASUSDEC_KEYPAD_WINAPP:
-			return KEY_MENU;
-
-		case ASUSDEC_KEYPAD_RIGHTCTRL:
-			return KEY_RIGHTCTRL;
-
-		case ASUSDEC_KEYPAD_HOME:	
-			return KEY_HOME;
-
-		case ASUSDEC_KEYPAD_PAGEUP:
-			return KEY_PAGEUP;
-
-		case ASUSDEC_KEYPAD_PAGEDOWN:
-			return KEY_PAGEDOWN;
-
-		case ASUSDEC_KEYPAD_END:
-			return KEY_END;
-
-		//--- JP keys
-		case ASUSDEC_YEN:
-			return KEY_YEN;
-			
-		case ASUSDEC_RO:
-			return KEY_RO;
-			
-		case ASUSDEC_MUHENKAN:
-			return KEY_MUHENKAN;
-			
-		case ASUSDEC_HENKAN:
-			return KEY_HENKAN;
-			
-		case ASUSDEC_HIRAGANA_KATAKANA:
-			return KEY_KATAKANAHIRAGANA;			
-			
-		//--- UK keys
-		case ASUSDEC_EUROPE_2:
-			return KEY_102ND;
-			
-		default:
-			return -1;
-	}
-}
+		0,	0,	0,	0,	0,	0,	0,	0,  0,	0,	0,	0,	0, 15, 41,	0,
+	  0, 56, 42, 93, 29, 16,  2,  0,  0,  0, 44, 31, 30, 17,	3,  0,
+	  0, 46, 45, 32, 18,  5,  4,	0,  0, 57, 47, 33, 20, 19,  6,	0,
+	  0, 49, 48, 35, 34, 21,  7,	0,  0,  0, 50, 36, 22,  8,  9,	0,
+	  0, 51, 37, 23, 24, 11, 10,  0,  0, 52, 53, 38, 39, 25, 12,  0,
+	  0, 89, 40,  0, 26, 13,  0,  0, 58, 54, 28, 27,  0, 43,  0, 85,
+	  0, 86,	0,	0, 92,  0, 14, 94,  0,	0,124,	0, 71,	0,  0,  0,
+		0,	0,	0,	0,	0,	0,158,	0,	0,	0,	0,	0,	0,	0,	0,	0,
+
+	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+		0,100,	0,  0, 97,	0,  0,  0,	0,  0,  0,  0,  0,  0,  0,172,
+		0,	0,  0,	0,  0,  0,  0,217,	0,  0,  0,	0,  0,  0,  0,139,
+		0,142,238,237, 60,224,225, 61,212,  0,	0,	0,  0,  0,  0,	0,
+	150, 62,165,164,163,113,114,115,	0,  0,	0,  0,  0,	0,  0,  0,
+		0,  0,  0,  0,  0,  0,  0,  0,  0,	0,	0,  0,  0,  0,	0,  0,
+	  0,  0,  0,  0,  0,  0,  0,	0,  0,107,  0,105,102,  0,  0,	0,
+		0,	0,108,	0,106,103,  0,	0,  0,	0,109,  0,	0,104,	0,  0,
+};
 
 static void asusdec_reset_counter(unsigned long data){
 	ec_chip->d_index = 0;
@@ -1143,8 +924,10 @@
 
 static int asusdec_tp_control(int arg){
 
-	int ret_val = 0;	
-	
+	int ret_val;
+
+	ret_val = 0;
+
 	if(arg == ASUSDEC_TP_ON){
 		if (ec_chip->tp_enable == 0){
 			ec_chip->tp_wait_ack = 1;
@@ -1157,16 +940,27 @@
 			ec_chip->init_success = -1;
 			asusdec_reset_dock();
 		}
-		ret_val = 0;
 	} else if (arg == ASUSDEC_TP_OFF){
 		ec_chip->tp_wait_ack = 1;
 		ec_chip->tp_enable = 0;
 		asusdec_i2c_write_data(ec_chip->client, 0xF5D4);
 		ec_chip->d_index = 0;
-		ret_val = 0;
+	} else if (arg == ASUSDEC_TP_TOOGLE){
+		ec_chip->tp_wait_ack = 1;
+		ec_chip->d_index = 0;
+		if(ec_chip->tp_enable)
+		{
+			ec_chip->tp_enable = 0;
+			asusdec_i2c_write_data(ec_chip->client, 0xF5D4);
+		}
+		else
+		{
+			ec_chip->tp_enable = 1;
+			asusdec_i2c_write_data(ec_chip->client, 0xF4D4);
+		}
 	} else
 		ret_val = -ENOTTY;
-	
+
 	return ret_val;
 
 }
@@ -1177,17 +971,17 @@
 	ec_chip->touchpad_data.y_sign = (ec_chip->ec_data[0] & Y_SIGN_MASK) ? 1:0;
 	ec_chip->touchpad_data.left_btn = (ec_chip->ec_data[0] & LEFT_BTN_MASK) ? 1:0;
 	ec_chip->touchpad_data.right_btn = (ec_chip->ec_data[0] & RIGHT_BTN_MASK) ? 1:0;
-	ec_chip->touchpad_data.delta_x = 
+	ec_chip->touchpad_data.delta_x =
 		(ec_chip->touchpad_data.x_sign) ? (ec_chip->ec_data[1] - 0xff):ec_chip->ec_data[1];
-	ec_chip->touchpad_data.delta_y = 
+	ec_chip->touchpad_data.delta_y =
 		(ec_chip->touchpad_data.y_sign) ? (ec_chip->ec_data[2] - 0xff):ec_chip->ec_data[2];
 
 	input_report_rel(ec_chip->indev, REL_X, ec_chip->touchpad_data.delta_x);
 	input_report_rel(ec_chip->indev, REL_Y, (-1) * ec_chip->touchpad_data.delta_y);
 	input_report_key(ec_chip->indev, BTN_LEFT, ec_chip->touchpad_data.left_btn);
-	input_report_key(ec_chip->indev, KEY_BACK, ec_chip->touchpad_data.right_btn);				
+	input_report_key(ec_chip->indev, KEY_BACK, ec_chip->touchpad_data.right_btn);
 	input_sync(ec_chip->indev);
-	
+
 }
 #endif
 
@@ -1196,7 +990,7 @@
 	unsigned char SA1,A1,B1,SB1,C1,D1;
 	static unsigned char SA1_O=0,A1_O=0,B1_O=0,SB1_O=0,C1_O=0,D1_O=0;
 	static int Null_data_times = 0;
-	
+
 	if ((ec_chip->tp_enable) && (ec_chip->touchpad_member == ELANTOUCHPAD)){
 		SA1= ec_chip->ec_data[0];
 		A1 = ec_chip->ec_data[1];
@@ -1205,17 +999,17 @@
 		C1 = ec_chip->ec_data[4];
 		D1 = ec_chip->ec_data[5];
 		ASUSDEC_INFO("SA1=0x%x A1=0x%x B1=0x%x SB1=0x%x C1=0x%x D1=0x%x \n",SA1,A1,B1,SB1,C1,D1);
-		if ( (SA1 == 0xC4) && (A1 == 0xFF) && (B1 == 0xFF) && 
+		if ( (SA1 == 0xC4) && (A1 == 0xFF) && (B1 == 0xFF) &&
 		     (SB1 == 0x02) && (C1 == 0xFF) && (D1 == 0xFF)){
 			Null_data_times ++;
 			goto asusdec_tp_abs_end;
 		}
 
-		if(!(SA1 == SA1_O && A1 == A1_O && B1 == B1_O && 
+		if(!(SA1 == SA1_O && A1 == A1_O && B1 == B1_O &&
 		   SB1 == SB1_O && C1 == C1_O && D1 == D1_O)) {
 			elantech_report_absolute_to_related(ec_chip, &Null_data_times);
 		}
-		
+
 asusdec_tp_abs_end:
 		SA1_O = SA1;
 		A1_O = A1;
@@ -1246,17 +1040,17 @@
 	} else {
 		tp_start = 0;
 	}
-		
+
 	for( i = tp_start; i < length - 1 ; i++){
 		ec_chip->ec_data[ec_chip->d_index] = ec_chip->i2c_data[i+2];
 		ec_chip->d_index++;
-		if (ec_chip->d_index == 6){			
+		if (ec_chip->d_index == 6){
 			asusdec_tp_abs();
 			ec_chip->d_index = 0;
 		}
 	}
-	
-	
+
+
 	if (ec_chip->d_index)
 		mod_timer(&ec_chip->asusdec_timer,jiffies+(HZ * 1/20));
 #else
@@ -1268,7 +1062,7 @@
 			asusdec_tp_rel();
 			ec_chip->d_index = 0;
 		}
-	}	
+	}
 #endif
 }
 
@@ -1374,24 +1168,27 @@
 	}
 }
 static void asusdec_kp_sci(void){
-	int ec_signal = ec_chip->i2c_data[2];
-	
-	ec_chip->keypad_data.input_keycode = asusdec_kp_sci_table[ec_signal];
+	/* HACK:
+	 * because from 0xB0 to 0xE0 key mapping were empty
+	 * i decided to use these 32 shorts for mapping the the
+	 * functions buttons ( WLAN, WWW, PREVIOUSSONG.. )
+	 */
+	int ec_signal = 0xB0 + ec_chip->i2c_data[2];
+
+	ec_chip->keypad_data.input_keycode = (int)((unsigned short *)ec_chip->indev->keycode)[ec_signal];//asusdec_kp_sci_table[ec_signal];
 	if(ec_chip->keypad_data.input_keycode > 0){
 		ASUSDEC_INFO("input_keycode = 0x%x\n", ec_chip->keypad_data.input_keycode);
-		
 		input_report_key(ec_chip->indev, ec_chip->keypad_data.input_keycode, 1);
-		input_sync(ec_chip->indev); 
+		input_sync(ec_chip->indev);
 		input_report_key(ec_chip->indev, ec_chip->keypad_data.input_keycode, 0);
-		input_sync(ec_chip->indev); 
-		
-	}else{				
+		input_sync(ec_chip->indev);
+	}else{
 		ASUSDEC_INFO("Unknown ec_signal = 0x%x\n", ec_signal);
 	}
 }
 static void asusdec_kp_key(void){
 	int scancode = 0;
-	
+
 	if (ec_chip->i2c_data[2] == ASUSDEC_KEYPAD_KEY_EXTEND){
 		ec_chip->keypad_data.extend = 1;
 		ec_chip->bc = 3;
@@ -1400,14 +1197,19 @@
 		ec_chip->bc = 2;
 	}
 	if(ec_chip->i2c_data[ec_chip->bc] == ASUSDEC_KEYPAD_KEY_BREAK){
-		ec_chip->keypad_data.value = 0;	
+		ec_chip->keypad_data.value = 0;
 		ec_chip->bc++;
 	}else{
 		ec_chip->keypad_data.value = 1;
 	}
-	
+
 	if (ec_chip->keypad_data.extend == 1){
-		scancode = ((ASUSDEC_KEYPAD_KEY_EXTEND << 8) | ec_chip->i2c_data[ec_chip->bc]);
+		/* found extended key ( a key that have multiple functions )
+		 * HACK:
+		 * uppper keyboard layout were empty...
+		 * use it! :)
+		 */
+		scancode = ( 0x80 + ec_chip->i2c_data[ec_chip->bc]);
 	} else {
 		scancode = ec_chip->i2c_data[ec_chip->bc];
 	}
@@ -1415,35 +1217,42 @@
 		if ((ec_chip->i2c_data[2] == 0xE0) &&
 			(ec_chip->i2c_data[3] == 0xF0) &&
 			(ec_chip->i2c_data[4] == 0x12)){
-			scancode = ec_chip->i2c_data[5] << 8 | ec_chip->i2c_data[6];
+			/* left shift + extended key
+			 * because these keys have the same
+			 * scancode of the extended ones use the same HACK.
+			 */
+			scancode = 0x80 + ec_chip->i2c_data[6];
 			ec_chip->keypad_data.value = 1;
 		}
 		else if ((ec_chip->i2c_data[2] == 0xE0) &&
 			(ec_chip->i2c_data[3] == 0xF0) &&
 			(ec_chip->i2c_data[4] == 0x59)){
-			scancode = ec_chip->i2c_data[5] << 8 | ec_chip->i2c_data[6];
+			/* right shift + extended key, read above */
+			scancode = 0x80 + ec_chip->i2c_data[6];
 			ec_chip->keypad_data.value = 1;
 		}
 	}
 	ASUSDEC_INFO("scancode = 0x%x\n", scancode);
-	ec_chip->keypad_data.input_keycode = asusdec_kp_key_mapping(scancode);
-	if(ec_chip->keypad_data.input_keycode > 0){
-		ASUSDEC_INFO("input_keycode = 0x%x, input_value = %d\n", 
+
+	/* just an extra check, i love error control */
+	if(scancode < ec_chip->indev->keycodemax)
+	{
+		ec_chip->keypad_data.input_keycode = (int)((unsigned short *)ec_chip->indev->keycode)[scancode];
+		if(ec_chip->keypad_data.input_keycode > 0){
+			ASUSDEC_INFO("input_keycode = 0x%x, input_value = %d\n",
+					ec_chip->keypad_data.input_keycode, ec_chip->keypad_data.value);
+			input_report_key(ec_chip->indev,
 				ec_chip->keypad_data.input_keycode, ec_chip->keypad_data.value);
-		
-		input_report_key(ec_chip->indev, 
-			ec_chip->keypad_data.input_keycode, ec_chip->keypad_data.value);
-		input_sync(ec_chip->indev); 
-		
-	}else{				
-		ASUSDEC_INFO("Unknown scancode = 0x%x\n", scancode);
+			input_sync(ec_chip->indev);
+		}else{
+			ASUSDEC_INFO("Unknown scancode = 0x%x\n", scancode);
+		}
 	}
-
 }
 
 static void asusdec_keypad_processing(void){
-		
-	ASUSDEC_I2C_DATA(ec_chip->i2c_data,ec_chip->index);	
+
+	ASUSDEC_I2C_DATA(ec_chip->i2c_data,ec_chip->index);
 	if (ec_chip->i2c_data[1] & ASUSDEC_KBC_MASK)
 		asusdec_kp_kbc();
 	else if (ec_chip->i2c_data[1] & ASUSDEC_SCI_MASK)
@@ -1454,7 +1263,7 @@
 
 static void asusdec_dock_status_report(void){
 	ASUSDEC_INFO("dock_in = %d\n", ec_chip->dock_in);
-	switch_set_state(&ec_chip->dock_sdev, switch_value[ec_chip->dock_type]);
+	switch_set_state(&ec_chip->dock_sdev, (int)switch_value[ec_chip->dock_type]);
 #if BATTERY_DRIVER
 	queue_delayed_work(asusdec_wq, &ec_chip->asusdec_pad_battery_report_work, 0);
 #endif
@@ -1466,6 +1275,7 @@
 #endif
 }
 
+/*
 static int asusdec_get_version_num(void){
 	int i;
 	int v_num = 0;
@@ -1479,12 +1289,13 @@
 	ASUSDEC_INFO("v_num = %d\n", v_num);
 	return v_num ;
 }
+*/
 #if BATTERY_DRIVER
 static void asusdec_pad_battery_report_function(struct work_struct *dat)
 {
 	int ret_val = 0;
 	int dock_in = ec_chip->dock_in;
-	
+
 	ret_val = docking_callback(dock_in);
 	ASUSDEC_NOTICE("dock_in = %d, ret_val = %d\n", dock_in, ret_val);
 	if (ret_val < 0)
@@ -1538,7 +1349,7 @@
 static void asusdec_dock_init_work_function(struct work_struct *dat)
 {
 	int gpio = asusdec_dock_in_gpio;
-	int irq = gpio_to_irq(gpio);
+	//int irq = gpio_to_irq(gpio);
 	int i = 0;
 	int d_counter = 0;
 	int gpio_state = 0;
@@ -1617,11 +1428,11 @@
 	int smbus_data;
 	int gpio = asusdec_apwake_gpio;
 	int irq = gpio_to_irq(gpio);
-	
+
 	mutex_lock(&ec_chip->lock);
 	smbus_data = i2c_smbus_read_byte_data(&dockram_client, 0);
 	enable_irq(irq);
-	BuffPush(smbus_data);		
+	BuffPush(smbus_data);
 	mutex_unlock(&ec_chip->lock);
 }
 
@@ -1653,7 +1464,7 @@
 			asusdec_kp_smi();
 			return ;
 		}
-	}	
+	}
 
 	mutex_lock(&ec_chip->input_lock);
 	if (ec_chip->indev == NULL){
@@ -1673,14 +1484,15 @@
 
 static void asusAudiodec_work_function(struct work_struct *dat)
 {
-	// Audio Dock EC function Service
-	ASUSDEC_NOTICE("cmd 0x6a i2c_smbus read 8 byte datas\n");
-	int ret_val = 0;
+	//int ret_val = 0;
 	int mcu_cable_type = 0, bat_cable_type = 0;
 	int gpio = asusdec_apwake_gpio;
 	int irq = gpio_to_irq(gpio);
 
-	ret_val = asusdec_i2c_read_data(ec_chip->client);
+	// Audio Dock EC function Service
+	ASUSDEC_NOTICE("cmd 0x6a i2c_smbus read 8 byte datas\n");
+
+	/*ret_val =*/ asusdec_i2c_read_data(ec_chip->client);
 #if BATTERY_DRIVER
 		if (ec_chip->dock_type == AUDIO_DOCK) {
 			mcu_cable_type = asusAudiodec_cable_type_callback();
@@ -1749,6 +1561,10 @@
 	for ( i = 0; i < 246; i++)
 		set_bit(i,dev->keybit);
 
+	dev->keycodesize = sizeof(unsigned short);
+	dev->keycodemax = ARRAY_SIZE(default_keypad_mapping);
+	dev->keycode = default_keypad_mapping;
+
 	input_set_capability(dev, EV_LED, LED_CAPSL);
 }
 
@@ -1760,7 +1576,7 @@
 
 static int asusdec_input_device_create(struct i2c_client *client){
 	int err = 0;
-	
+
 	if (ec_chip->indev){
 		return 0;
 	}
@@ -1775,7 +1591,7 @@
 	ec_chip->indev->phys = "/dev/input/asusdec";
 	ec_chip->indev->dev.parent = &client->dev;
 	ec_chip->indev->event = asusdec_event;
-	
+
 	asusdec_keypad_set_input_params(ec_chip->indev);
 	err = input_register_device(ec_chip->indev);
 	if (err) {
@@ -1846,10 +1662,10 @@
 		err = -ENOMEM;
 		goto exit;
 	}
-		
+
 	i2c_set_clientdata(client, ec_chip);
 	ec_chip->client = client;
-	ec_chip->client->driver = &asusdec_driver;				
+	ec_chip->client->driver = &asusdec_driver;
 	ec_chip->client->flags = 1;
 
 	mutex_init(&ec_chip->lock);
@@ -1883,7 +1699,7 @@
 	ec_chip->lid_indev = NULL;
 	ec_chip->private->abs_dev = NULL;
 	asusdec_dockram_init(client);
-	
+
 	cdev_add(asusdec_cdev,asusdec_dev,1) ;
 
 	ec_chip->dock_sdev.name = DOCK_SDEV_NAME;
@@ -1965,6 +1781,11 @@
 	return sprintf(buf, "%d\n", (ec_chip->touchpad_member == ELANTOUCHPAD));
 }
 
+static ssize_t asusdec_tp_enable_show(struct device *class,struct device_attribute *attr,char *buf)
+{
+	return sprintf(buf, "%d\n", ec_chip->tp_enable);
+}
+
 static ssize_t asusdec_show_dock(struct device *class,struct device_attribute *attr,char *buf)
 {
 	return sprintf(buf, "dock detect = %d\n", ec_chip->dock_in);
@@ -1975,10 +1796,10 @@
 	if ((ec_chip->op_mode == 0) && (ec_chip->dock_in)){
 		if (buf[0] == '0')
 			queue_delayed_work(asusdec_wq, &ec_chip->asusdec_led_off_work, 0);
-		else 
+		else
 			queue_delayed_work(asusdec_wq, &ec_chip->asusdec_led_on_work, 0);
 	}
-	
+
 	return 0 ;
 }
 
@@ -2053,7 +1874,7 @@
 		ec_chip->ec_wakeup = 1;
 		ASUSDEC_NOTICE("Keep EC active when PAD in LP0\n");
 	}
-		
+
 	return 0 ;
 }
 
@@ -2067,7 +1888,7 @@
 		asusdec_dockram_write_data(0x0A,9);
 		ASUSDEC_NOTICE("discharging 15 seconds\n");
 		return sprintf(buf, "discharging 15 seconds\n");
-	}	
+	}
 
 	return 0;
 }
@@ -2093,7 +1914,7 @@
 
 static ssize_t asusdec_show_dock_battery_status(struct device *class,struct device_attribute *attr,char *buf)
 {
-	int bat_percentage = 0;
+	//int bat_percentage = 0;
 	int ret_val = 0;
 
 	if ((ec_chip->op_mode == 0) && (ec_chip->dock_in)){
@@ -2224,7 +2045,7 @@
 	queue_delayed_work(asusdec_wq, &ec_chip->asusdec_dock_init_work, 0);
 
 	printk("asusdec_resume-\n");
-	return 0;	
+	return 0;
 }
 
 static int asusdec_set_wakeup_cmd(void){
@@ -2341,7 +2162,7 @@
 			msleep(2500);
 			ASUSDEC_NOTICE("ASUSDEC_INIT - EC version: %s\n", ec_chip->ec_version);
 			length = strlen(ec_chip->ec_version);
-			ec_chip->ec_version[length] = NULL;
+			ec_chip->ec_version[length] = (int)NULL;
 			snprintf(name_buf, sizeof(name_buf), "SWITCH_NAME=%s", ec_chip->ec_version);
 			envp[env_offset++] = name_buf;
 			envp[env_offset] = NULL;
@@ -2395,7 +2216,7 @@
 }
 
 static int BuffDataSize(void)
-{   
+{
     int in = buff_in_ptr;
     int out = buff_out_ptr;
 
@@ -2411,7 +2232,7 @@
 static void BuffPush(char data)
 {
 
-    if (BuffDataSize() >= (EC_BUFF_LEN -1)) 
+    if (BuffDataSize() >= (EC_BUFF_LEN -1))
     {
         ASUSDEC_ERR("Error: EC work-buf overflow \n");
         return;
@@ -2419,21 +2240,21 @@
 
     ec_to_host_buffer[buff_in_ptr] = data;
     buff_in_ptr++;
-    if (buff_in_ptr >= EC_BUFF_LEN) 
+    if (buff_in_ptr >= EC_BUFF_LEN)
     {
         buff_in_ptr = 0;
-    }    
+    }
 }
 
 static char BuffGet(void)
 {
     char c = (char)0;
 
-    if (BuffDataSize() != 0) 
+    if (BuffDataSize() != 0)
     {
-        c = (char) ec_to_host_buffer[buff_out_ptr];        
+        c = (char) ec_to_host_buffer[buff_out_ptr];
         buff_out_ptr++;
-         if (buff_out_ptr >= EC_BUFF_LEN) 
+         if (buff_out_ptr >= EC_BUFF_LEN)
          {
              buff_out_ptr = 0;
          }
@@ -2459,7 +2280,7 @@
         i++;
 		f_counter = 0;
 		total_buf++;
-    }	
+    }
 
     ret = copy_to_user(buf, tmp_buf, i);
     if (ret == 0)
@@ -2473,27 +2294,27 @@
 
 static ssize_t ec_write(struct file *file, const char __user *buf, size_t count, loff_t *ppos)
 {
-    int err;    
+    int err;
     int i;
 
     if (h2ec_count > 0)
     {                   /* There is still data in the buffer that */
         return -EBUSY;  /* was not sent to the EC */
     }
-    if (count > EC_BUFF_LEN) 
+    if (count > EC_BUFF_LEN)
     {
         return -EINVAL; /* data size is too big */
     }
-    
+
     err = copy_from_user(host_to_ec_buffer, buf, count);
     if (err)
     {
         ASUSDEC_ERR("ec_write copy error\n");
         return err;
     }
-   
+
     h2ec_count = count;
-    for (i = 0; i < count ; i++) 
+    for (i = 0; i < count ; i++)
     {
 		i2c_smbus_write_byte_data(&dockram_client, host_to_ec_buffer[i],0);
     }
@@ -2559,7 +2380,7 @@
 }
 
 static int asusdec_dock_battery_get_status(union power_supply_propval *val){
-	int bat_percentage = 0;
+	//int bat_percentage = 0;
 	int ret_val = 0;
 
 	val->intval = POWER_SUPPLY_STATUS_NOT_CHARGING;
@@ -2632,7 +2453,7 @@
 int asusAudiodec_cable_type_callback(void) {
 
 	int retval = 0, retry = 3;
-	int error;
+	//int error;
 	u8 cmd[2];
 
 	cmd[0] = 0x55;
@@ -2655,7 +2476,7 @@
 			}
 		}
 	}
-fail_to_access_mcu:
+//fail_to_access_mcu:
 	ASUSDEC_NOTICE("MCU doesn't exist or fail to access MCU\n");
 	return -1;
 }
@@ -2663,7 +2484,7 @@
 
 static int __init asusdec_init(void)
 {
-	int err_code = 0;	
+	int err_code = 0;
 
 	printk(KERN_INFO "%s+ #####\n", __func__);
 	if (asusdec_major) {
@@ -2678,7 +2499,7 @@
 	asusdec_cdev = cdev_alloc() ;
 	asusdec_cdev->owner = THIS_MODULE ;
 	asusdec_cdev->ops = &asusdec_fops ;
-		
+
 	err_code=i2c_add_driver(&asusdec_driver);
 	if(err_code){
 		ASUSDEC_ERR("i2c_add_driver fail\n") ;
@@ -2702,9 +2523,9 @@
 	return 0;
 
 device_create_fail :
-	class_destroy(asusdec_class) ;	
+	class_destroy(asusdec_class) ;
 class_create_fail :
-	i2c_del_driver(&asusdec_driver);	
+	i2c_del_driver(&asusdec_driver);
 i2c_add_driver_fail :
 	printk(KERN_INFO "%s- #####\n", __func__);
 	return err_code;
diff -ur stock-kernel/drivers/input/asusec/asusdec.h linux/drivers/input/asusec/asusdec.h
--- stock-kernel/drivers/input/asusec/asusdec.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/asusec/asusdec.h	2013-02-13 16:09:15.940021541 +0100
@@ -25,18 +25,18 @@
 						for (i = 0; i < array[0]+1; i++) \
 							ASUSDEC_INFO("ec_data[%d] = 0x%x\n", i, array[i]);	\
 					} while(0)
+#define ASUSDEC_NOTICE(format, arg...)  \
+        printk(KERN_NOTICE "asusdec: [%s] " format , __FUNCTION__ , ## arg)
 #else
-#define ASUSDEC_INFO(format, arg...)	 
+#define ASUSDEC_INFO(format, arg...)
 #define ASUSDEC_I2C_DATA(array, i)
+#define ASUSDEC_NOTICE(format, arg...)
 #endif
 
-#define ASUSDEC_NOTICE(format, arg...)	\
-	printk(KERN_NOTICE "asusdec: [%s] " format , __FUNCTION__ , ## arg)
-
 #define ASUSDEC_ERR(format, arg...)	\
 	printk(KERN_ERR "asusdec: [%s] " format , __FUNCTION__ , ## arg)
 
-//-----------------------------------------	       
+//-----------------------------------------
 
 #define DRIVER_DESC     		"ASUS Dock EC Driver"
 #define DOCK_SDEV_NAME			"dock"
@@ -45,7 +45,6 @@
 #define ASUSDEC_I2C_ERR_TOLERANCE	8
 #define ASUSDEC_RETRY_COUNT		3
 #define ASUSDEC_POLLING_RATE		80
-
 #define ASUSDEC_OBF_MASK		0x1
 #define ASUSDEC_KEY_MASK		0x4
 #define ASUSDEC_KBC_MASK		0x8
@@ -91,7 +90,7 @@
 #define ASUSDEC_KEYPAD_KEY_WAVE		0x0E
 #define ASUSDEC_KEYPAD_KEY_1		0x16
 #define ASUSDEC_KEYPAD_KEY_2		0X1E
-#define ASUSDEC_KEYPAD_KEY_3		0x26	
+#define ASUSDEC_KEYPAD_KEY_3		0x26
 #define ASUSDEC_KEYPAD_KEY_4		0x25
 #define ASUSDEC_KEYPAD_KEY_5		0x2E
 #define ASUSDEC_KEYPAD_KEY_6        	0x36
@@ -159,14 +158,14 @@
 #define ASUSDEC_KEYPAD_PAGEUP		0xE07D
 #define ASUSDEC_KEYPAD_PAGEDOWN		0xE07A
 #define ASUSDEC_KEYPAD_END			0xE069
-/************  JP keys *************/                       
-#define ASUSDEC_HANKAKU_ZENKAKU		0x5F                
+/************  JP keys *************/
+#define ASUSDEC_HANKAKU_ZENKAKU		0x5F
 #define ASUSDEC_YEN					0x6A
-#define ASUSDEC_MUHENKAN				0x67        
-#define ASUSDEC_HENKAN				0x64        
+#define ASUSDEC_MUHENKAN				0x67
+#define ASUSDEC_HENKAN				0x64
 #define ASUSDEC_HIRAGANA_KATAKANA	0x13
 #define ASUSDEC_RO					0x51
-/********************************/    
+/********************************/
 /************  UK keys *************/
 #define ASUSDEC_EUROPE_2				0x61
 /********************************/
@@ -194,6 +193,7 @@
 #define ASUSDEC_CPAS_LED_OFF	0
 #define ASUSDEC_TP_ON	1
 #define ASUSDEC_TP_OFF	0
+#define ASUSDEC_TP_TOOGLE	2
 #define ASUSDEC_EC_ON	1
 #define ASUSDEC_EC_OFF	0
 #define ASUSDEC_IOC_MAGIC	0xf4
@@ -248,7 +248,7 @@
 struct asusdec_keypad{
 	int value;
 	int input_keycode;
-	int extend;	
+	int extend;
 };
 
 struct asusdec_touchpad_relative{
@@ -303,7 +303,7 @@
 	struct asusdec_keypad keypad_data;
 	struct elantech_data *private;
 	struct timer_list asusdec_timer;
-#if TOUCHPAD_MODE	
+#if TOUCHPAD_MODE
 	struct asusdec_touchpad_absolute t_abs;
 #else
 	struct asusdec_touchpad_relative touchpad_data;
@@ -323,7 +323,7 @@
 	char dock_pid[32];
 	int polling_rate;
 	int dock_in;	// 0: without dock, 1: with dock
-	int op_mode;	// 0: normal mode, 1: fw update mode	
+	int op_mode;	// 0: normal mode, 1: fw update mode
 	int kbc_value;	// capslock_led 0: led off, 1: led on
 	int dock_det;	// dock-in interrupt count
 	int dock_init;	// 0: dock not init, 1: dock init successfully
diff -ur stock-kernel/drivers/input/asusec/asuspec.h linux/drivers/input/asusec/asuspec.h
--- stock-kernel/drivers/input/asusec/asuspec.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/asusec/asuspec.h	2013-02-02 03:17:29.620003883 +0100
@@ -11,6 +11,8 @@
  * Debug Utility
  */
 #if ASUSPEC_DEBUG
+#define ASUSPEC_NOTICE(format, arg...)	\
+	printk(KERN_NOTICE "asuspec: [%s] " format , __FUNCTION__ , ## arg)
 #define ASUSPEC_INFO(format, arg...)	\
 	printk(KERN_INFO "asuspec: [%s] " format , __FUNCTION__ , ## arg)
 #define ASUSPEC_I2C_DATA(array, i)	\
@@ -19,17 +21,15 @@
 							ASUSPEC_INFO("pad_ec_data[%d] = 0x%x\n", i, array[i]);	\
 					} while(0)
 #else
-#define ASUSPEC_INFO(format, arg...)	 
+#define ASUSPEC_INFO(format, arg...)
 #define ASUSPEC_I2C_DATA(array, i)
+#define ASUSPEC_NOTICE(format, arg...)
 #endif
 
-#define ASUSPEC_NOTICE(format, arg...)	\
-	printk(KERN_NOTICE "asuspec: [%s] " format , __FUNCTION__ , ## arg)
-
 #define ASUSPEC_ERR(format, arg...)	\
 	printk(KERN_ERR "asuspec: [%s] " format , __FUNCTION__ , ## arg)
 
-//-----------------------------------------	       
+//-----------------------------------------
 
 #define DRIVER_DESC     		"ASUS PAD EC driver"
 #define PAD_SDEV_NAME			"pad"
diff -ur stock-kernel/drivers/input/asusec/elan_i2c_asus.c linux/drivers/input/asusec/elan_i2c_asus.c
--- stock-kernel/drivers/input/asusec/elan_i2c_asus.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/asusec/elan_i2c_asus.c	2013-02-02 02:38:59.330003817 +0100
@@ -6,6 +6,7 @@
 #include <linux/interrupt.h>
 #include <linux/init.h>
 #include <linux/input.h>
+#include <linux/input/mt.h>
 #include <asm/gpio.h>
 #include <linux/workqueue.h>
 #include <linux/cdev.h>
@@ -23,14 +24,16 @@
 
 static int elan_i2c_asus_cmd(struct i2c_client *client,unsigned char *param, int command)
 {
-  
+
 	u16 asus_ec_cmd;
 	int ret;
 	int retry = ELAN_RETRY_COUNT;
 	int i;
 	int retry_data_count;
 	u8 i2c_data[16];
+#if ASUSDEC_DEBUG
 	int index;
+#endif
 
 	ELAN_INFO("command = 0x%x\n",command);
 	asus_ec_cmd = (((command & 0x00ff) << 8) | 0xD4);
@@ -40,8 +43,8 @@
 		ELAN_ERR("Wirte to device fails status %x\n",ret);
 		return ret;
 	}
-	msleep(CONVERSION_TIME_MS);	
-	
+	msleep(CONVERSION_TIME_MS);
+
 	while(retry-- > 0){
 		ret = i2c_smbus_read_i2c_block_data(client, 0x6A, 8, i2c_data);
 		if (ret < 0) {
@@ -49,139 +52,112 @@
 			return ret;
 		}
 		ASUSDEC_I2C_DATA(i2c_data, index);
-		if ((i2c_data[1] & ASUSDEC_OBF_MASK) && 
-			(i2c_data[1] & ASUSDEC_AUX_MASK)){ 
+		if ((i2c_data[1] & ASUSDEC_OBF_MASK) &&
+			(i2c_data[1] & ASUSDEC_AUX_MASK)){
 			if (i2c_data[2] == PSMOUSE_RET_ACK){
 				break;
 			}
 			else if (i2c_data[2] == PSMOUSE_RET_NAK){
 				goto fail_elan_touchpad_i2c;
 			}
-		}		
+		}
 		msleep(CONVERSION_TIME_MS/5);
 	}
-	
+
 	retry_data_count = (command & 0x0f00) >> 8;
 	for(i=1; i <= retry_data_count; i++){
-		param[i-1] = i2c_data[i+2];	  
+		param[i-1] = i2c_data[i+2];
 	}
-	  
+
 	return 0;
-	
-fail_elan_touchpad_i2c:	
+
+fail_elan_touchpad_i2c:
 	ELAN_ERR("fail to get touchpad response");
 	return -1;
-  
+
 }
 
 /*
  * Interpret complete data packets and report absolute mode input events for
  * hardware version 2. (6 byte packets)
+ * HACKED version: don't write anything in asus structs,
+ * just report position/keys/pressure to kernel.
  */
 void elantech_report_absolute_to_related(struct asusdec_chip *ec_chip, int *Null_data_times)
 {
-	struct elantech_data *etd;
 	struct input_dev *dev;
 	unsigned char *packet;
-	unsigned int fingers;
-	unsigned int width = 0;
-	int left_button, right_button;
-	int x, y;
-	int last_fingers;
-	int i;
+	int fingers,x,y,h_value,width;
 
-	etd = (struct elantech_data *) ec_chip->private;
-	dev = etd->abs_dev;
- 	packet = ec_chip->ec_data;
+	/* fingers => how many fingers are now on the touchpad
+	 * x => current X position
+	 * y => current y position
+	 * h_value => current Z position ( pressure on the touchpad )
+	 * width => width of touched area
+	 */
 
-	// Report multitouch events for fingers.
+	packet = ec_chip->ec_data;
+	dev = ec_chip->private->abs_dev;
 	fingers = (packet[0] & 0xc0) >> 6;
 	x = ((packet[1] & 0x0f) << 8) | packet[2];
-	y = etd->ymax - (((packet[4] & 0x0f) << 8) | packet[5]);
-	//printk("fingers=%d, x=%d, y=%d, packet=%02x,%02x,%02x,%02x,%02x,%02x\n", fingers, x, y, packet[0], packet[1], packet[2], packet[3], packet[4], packet[5]);
-        width = ((packet[0] & 0x30) >> 2) | ((packet[3] & 0x30) >> 4);
-
-	last_fingers = etd->fingers;
-
-	switch (fingers) {
-		case 0:
-			// No fingers down.
-			etd->fingers = 0;
-			break;
+	y = ETP_YMAX_V2 - (((packet[4] & 0x0f) << 8) | packet[5]);
+	width = ((packet[0] & 0x30) >> 2) | ((packet[3] & 0x30) >> 4);
+	h_value = ((packet[4] & 0xf0) >> 4) | (packet[1] & 0xf0);
+
+	input_report_key(dev, BTN_LEFT, (packet[0] & 0x01));
+	input_report_key(dev, BTN_RIGHT, (packet[0] & 0x02) >> 1);
+	input_report_key(dev, BTN_TOUCH, fingers != 0);
+	input_report_key(dev, BTN_TOOL_FINGER, fingers == 1);
+	input_report_key(dev, BTN_TOOL_DOUBLETAP, fingers == 2);
+	input_report_key(dev, BTN_TOOL_TRIPLETAP, fingers == 3);
+	input_report_key(dev, BTN_TOOL_QUADTAP, fingers == 4);
 
+	switch(fingers)
+	{
 		case 1:
-			// One finger down.
-			etd->fingers = 1;
-			etd->pos[0].x = x;
-			etd->pos[0].y = y;
+			input_mt_slot(dev, 0);
+			input_mt_report_slot_state(dev, MT_TOOL_FINGER, true);
+			input_report_abs(dev, ABS_MT_POSITION_X, x);
+			input_report_abs(dev, ABS_MT_POSITION_Y, y);
+			input_report_abs(dev, ABS_MT_TOUCH_MAJOR, width);
+			input_report_abs(dev, ABS_MT_PRESSURE, h_value);
+			input_mt_slot(dev, 1);
+			input_mt_report_slot_state(dev, MT_TOOL_FINGER, false);
 			break;
-
 		case 2:
-			// Two fingers down.
-			// Wait to get data from both fingers.
-			if (etd->fingers != 2) {
-				etd->fingers = 2;
-				etd->pos[0].x = -1;
-				etd->pos[1].x = -1;
-			}
-			if ((packet[0] & 0x0c) == 0x04) {
-				etd->pos[0].x = x;
-				etd->pos[0].y = y;
-			} else {
-				etd->pos[1].x = x;
-				etd->pos[1].y = y;
-			}
-			if (etd->pos[0].x < 0 || etd->pos[1].x < 0)
-				return;
-			break;
-
-		case 3:
-			// Three or more fingers down.
-			// Wait for at least one finger to go up.
-			return;
-	}
-
-	// Send finger reports.
-	if (etd->fingers) {
-		for (i = 0; i < etd->fingers; i++) {
+			if ((packet[0] & 0x0c) == 0x04) // custom asus stuff i think...
+				input_mt_slot(dev, 0); // this tell us if current data is related to finger 1 or 2
+			else
+				input_mt_slot(dev, 1);
+			input_mt_report_slot_state(dev, MT_TOOL_FINGER, true);
+			input_report_abs(dev, ABS_MT_POSITION_X, x);
+			input_report_abs(dev, ABS_MT_POSITION_Y, y);
 			input_report_abs(dev, ABS_MT_TOUCH_MAJOR, width);
-			input_report_abs(dev, ABS_MT_POSITION_X, etd->pos[i].x);
-			input_report_abs(dev, ABS_MT_POSITION_Y, etd->pos[i].y);
-			input_mt_sync(dev);
-		}
-	} else if (last_fingers) {
-		input_mt_sync(dev);
-	}
-
-	// Send button press / release events.
-	left_button = (packet[0] & 0x01);
-	if (left_button != etd->left_button) {
-		input_report_key(dev, BTN_LEFT, left_button);
-		etd->left_button = left_button;
-	}
-
-	right_button = (packet[0] & 0x02) >> 1;
-	if (right_button != etd->right_button) {
-		input_report_key(dev, BTN_RIGHT, right_button);
-		etd->right_button = right_button;
+			input_report_abs(dev, ABS_MT_PRESSURE, h_value);
+			break;
+		case 0:
+			input_mt_slot(dev, 0);
+			input_mt_report_slot_state(dev, MT_TOOL_FINGER, false);
+			input_mt_slot(dev, 1);
+			input_mt_report_slot_state(dev, MT_TOOL_FINGER, false);
 	}
-	
+	input_mt_report_pointer_emulation(dev, true);
 	input_sync(dev);
 }
 
 /*
  * Put the touchpad into absolute mode
  */
- 
+
 static int elantech_set_absolute_mode(struct asusdec_chip *ec_chip)
 {
-	
+
 	struct i2c_client *client;
-	unsigned char reg_10 = 0x03;	
-		
+	unsigned char reg_10 = 0x03;
+
 	ELAN_INFO("elantech_set_absolute_mode 2\n");
 	client = ec_chip->client;
-	
+
 	if ((!elan_i2c_asus_cmd(client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
 	    (!elan_i2c_asus_cmd(client, NULL, ETP_REGISTER_RW)) &&
 	    (!elan_i2c_asus_cmd(client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
@@ -189,59 +165,96 @@
 	    (!elan_i2c_asus_cmd(client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
 	    (!elan_i2c_asus_cmd(client, NULL, reg_10)) &&
 	    (!elan_i2c_asus_cmd(client, NULL, PSMOUSE_CMD_SETSCALE11))) {
-		
+
 		return 0;
 	}
-	return -1; 
+	return -1;
 }
 
-
 /*
  * Set the appropriate event bits for the input subsystem
  */
 static int elantech_set_input_rel_params(struct asusdec_chip *ec_chip)
 {
 	struct elantech_data *etd = ec_chip->private;
+	struct input_dev *dev;
 	unsigned char param[3];
 	int ret;
 
-        if ((!elan_i2c_asus_cmd(ec_chip->client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
-            (!elan_i2c_asus_cmd(ec_chip->client, NULL, 0x0001)) &&
-            (!elan_i2c_asus_cmd(ec_chip->client, param, PSMOUSE_CMD_GETINFO))){
-                etd->fw_version = (param[0] << 16) | (param[1] << 8) | param[2];
-        }
-        else
-                goto init_fail;
+	if ((!elan_i2c_asus_cmd(ec_chip->client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
+			(!elan_i2c_asus_cmd(ec_chip->client, NULL, 0x0001)) &&
+			(!elan_i2c_asus_cmd(ec_chip->client, param, PSMOUSE_CMD_GETINFO))){
+					etd->fw_version = (param[0] << 16) | (param[1] << 8) | param[2];
+	}
+	else
+					goto init_fail;
 
 	if ((!elan_i2c_asus_cmd(ec_chip->client, NULL, ETP_PS2_CUSTOM_COMMAND)) &&
 	    (!elan_i2c_asus_cmd(ec_chip->client, NULL, 0x0000)) &&
 	    (!elan_i2c_asus_cmd(ec_chip->client, param, PSMOUSE_CMD_GETINFO))){
-		
+
 		if(etd->abs_dev){
 			return 0;
 		}
-		
+
 		etd->xmax = (0x0F & param[0]) << 8 | param[1];
-		etd->ymax = (0xF0 & param[0]) << 4 | param[2];		
-		
-		etd->abs_dev = input_allocate_device();
+		etd->ymax = (0xF0 & param[0]) << 4 | param[2];
+
+		dev = etd->abs_dev = input_allocate_device();
 		ELAN_INFO("1 elantech_touchscreen=%p\n",etd->abs_dev);
 		if (etd->abs_dev != NULL){
 			ELAN_INFO("2 elantech_touchscreen=%p\n",etd->abs_dev);
 			etd->abs_dev->name = "elantech_touchscreen";
+			/* STOCK ASUS
 			etd->abs_dev->evbit[0] = BIT_MASK(EV_KEY) | BIT_MASK(EV_SYN);
 			etd->abs_dev->keybit[BIT_WORD(BTN_MOUSE)] = BIT_MASK(BTN_LEFT) | BIT_MASK(BTN_RIGHT);
-		
+
 			set_bit(EV_KEY, etd->abs_dev->evbit);
 			set_bit(EV_ABS, etd->abs_dev->evbit);
 
 			input_set_abs_params(etd->abs_dev, ABS_MT_POSITION_X, 0, etd->xmax, 0, 0);
 			input_set_abs_params(etd->abs_dev, ABS_MT_POSITION_Y, 0, etd->ymax, 0, 0);
 			input_set_abs_params(etd->abs_dev, ABS_MT_TOUCH_MAJOR, 0, ETP_WMAX_V2, 0, 0);
+			*/
+
+			// DEFAULT from elantech.c
+
+			dev->phys = ec_chip->client->adapter->name;
+			dev->id.bustype = BUS_I2C;
+
+			__set_bit(EV_KEY, dev->evbit);
+			__set_bit(EV_ABS, dev->evbit);
+			__clear_bit(EV_REL, dev->evbit);
+
+			__set_bit(BTN_LEFT, dev->keybit);
+			__set_bit(BTN_RIGHT, dev->keybit);
+
+			__set_bit(BTN_TOUCH, dev->keybit);
+			__set_bit(BTN_TOOL_FINGER, dev->keybit);
+			__set_bit(BTN_TOOL_DOUBLETAP, dev->keybit);
+			__set_bit(BTN_TOOL_TRIPLETAP, dev->keybit);
+			__set_bit(BTN_TOOL_QUADTAP, dev->keybit);
+
+			__set_bit(INPUT_PROP_SEMI_MT, dev->propbit);
+
+			/* Touch area X Y Value */
+			input_set_abs_params(dev, ABS_X, ETP_XMIN_V2, ETP_XMAX_V2, 0, 0);
+			input_set_abs_params(dev, ABS_Y, ETP_YMIN_V2, ETP_YMAX_V2, 0, 0);
+			/* Finger Pressure value */
+			input_set_abs_params(dev, ABS_MT_PRESSURE, ETP_PMIN_V2, ETP_PMAX_V2, 0, 0);
+
+			/* Palme Value */
+			input_set_abs_params(dev, ABS_MT_TOUCH_MAJOR, ETP_WMIN_V2, ETP_WMAX_V2, 0, 0);
+
+			/* Fingers X Y values */
+			input_mt_init_slots(dev, 2);
+			input_set_abs_params(dev, ABS_MT_POSITION_X, ETP_XMIN_V2, ETP_XMAX_V2, 0, 0);
+			input_set_abs_params(dev, ABS_MT_POSITION_Y, ETP_YMIN_V2, ETP_YMAX_V2, 0, 0);
+
 
 			ret=input_register_device(etd->abs_dev);
 			if (ret) {
-			      ELAN_ERR("Unable to register %s input device\n", etd->abs_dev->name);		  
+			      ELAN_ERR("Unable to register %s input device\n", etd->abs_dev->name);
 			}
 		}
 		return 0;
@@ -249,9 +262,8 @@
 
  init_fail:
 	return -1;
-  
-}
 
+}
 
 /*
  * Use magic knock to detect Elantech touchpad
@@ -263,7 +275,7 @@
 	ELAN_INFO("2.6.2X-Elan-touchpad-2010-11-27\n");
 
 	client = ec_chip->client;
-	
+
 	if (elan_i2c_asus_cmd(client,  NULL, PSMOUSE_CMD_DISABLE) ||
 	    elan_i2c_asus_cmd(client,  NULL, PSMOUSE_CMD_SETSCALE11) ||
 	    elan_i2c_asus_cmd(client,  NULL, PSMOUSE_CMD_SETSCALE11) ||
@@ -282,7 +294,7 @@
 			param[0], param[1],param[2]);
 		return -1;
 	}
-	
+
 	return 0;
 }
 
@@ -290,9 +302,10 @@
  * Initialize the touchpad and create sysfs entries
  */
 int elantech_init(struct asusdec_chip *ec_chip)
-{  
+{
 	ELAN_INFO("Elan et1059 elantech_init\n");
-	
+
+
 	if (elantech_set_absolute_mode(ec_chip)){
 		ELAN_ERR("failed to put touchpad into absolute mode.\n");
 		return -1;
@@ -301,6 +314,7 @@
 		ELAN_ERR("failed to elantech_set_input_rel_params.\n");
 		return -1;
 	}
+
 	//elan_i2c_asus_cmd(ec_chip->client,  NULL, PSMOUSE_CMD_ENABLE);
 	return 0;
 }
diff -ur stock-kernel/drivers/input/asusec/elan_i2c_asus.h linux/drivers/input/asusec/elan_i2c_asus.h
--- stock-kernel/drivers/input/asusec/elan_i2c_asus.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/asusec/elan_i2c_asus.h	2013-02-01 13:47:42.850001138 +0100
@@ -2,19 +2,20 @@
 #define _ELAN_I2C_ASUS_H
 
 #include "asusdec.h"
+#include <linux/input.h>
 
 #define ELAN_DEBUG			0
 #if ELAN_DEBUG
 #define ELAN_INFO(format, arg...)	\
 	printk(KERN_INFO "elan_i2c_asus: [%s] " format , __FUNCTION__ , ## arg)
 #else
-#define ELAN_INFO(format, arg...)	 
+#define ELAN_INFO(format, arg...)
 #endif
 
 
 #define ELAN_ERR(format, arg...)	\
 	printk(KERN_ERR "elan_i2c_asus: [%s] " format , __FUNCTION__ , ## arg)
-	
+
 #define CONVERSION_TIME_MS		50
 
 #define ELAN_RETRY_COUNT		3
@@ -99,7 +100,7 @@
  * Hence the X and Y ranges are doubled too.
  * The bezel around the pad also appears to be smaller
  */
-#define ETP_EDGE_FUZZ_V2		0
+#define ETP_EDGE_FUZZ_V2		8
 
 #define ETP_XMIN_V2			(   0 + ETP_EDGE_FUZZ_V2)
 #define ETP_XMAX_V2			(1152 - ETP_EDGE_FUZZ_V2)
@@ -109,11 +110,16 @@
 #define ETP_WMIN_V2                     0
 #define ETP_WMAX_V2                     15
 
+#define ETP_PMIN_V2			0
+#define ETP_PMAX_V2			255
+#define ETP_WMIN_V2			0
+#define ETP_WMAX_V2			15
+
 /*
  * For two finger touches the coordinate of each finger gets reported
  * separately but with reduced resolution.
  */
-#define ETP_2FT_FUZZ			0
+#define ETP_2FT_FUZZ			4
 
 #define ETP_2FT_XMIN			(  0 + ETP_2FT_FUZZ)
 #define ETP_2FT_XMAX			(288 - ETP_2FT_FUZZ)
diff -ur stock-kernel/drivers/input/input.c linux/drivers/input/input.c
--- stock-kernel/drivers/input/input.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/input/input.c	2013-02-27 17:49:29.899999784 +0100
@@ -734,14 +734,11 @@
 		if (error)
 			return error;
 	}
-
 	if (index >= dev->keycodemax)
 		return -EINVAL;
-
 	if (dev->keycodesize < sizeof(ke->keycode) &&
 			(ke->keycode >> (dev->keycodesize * 8)))
 		return -EINVAL;
-
 	switch (dev->keycodesize) {
 		case 1: {
 			u8 *k = (u8 *)dev->keycode;
diff -ur stock-kernel/drivers/power/pad_battery.c linux/drivers/power/pad_battery.c
--- stock-kernel/drivers/power/pad_battery.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/power/pad_battery.c	2013-02-11 18:34:24.559960084 +0100
@@ -46,9 +46,9 @@
 #define TEMP_KELVIN_TO_CELCIUS                             (2731)
 #define MAXIMAL_VALID_BATTERY_TEMP                             (200)
 #define USB_NO_Cable 0
-#define USB_DETECT_CABLE 1 
+#define USB_DETECT_CABLE 1
 #define USB_SHIFT 0
-#define AC_SHIFT 1 
+#define AC_SHIFT 1
 #define USB_Cable ((1 << (USB_SHIFT)) | (USB_DETECT_CABLE))
 #define USB_AC_Adapter ((1 << (AC_SHIFT)) | (USB_DETECT_CABLE))
 #define USB_CALBE_DETECT_MASK (USB_Cable  | USB_DETECT_CABLE)
@@ -64,7 +64,7 @@
 module_param(battery_current, uint, 0644);
 module_param(battery_remaining_capacity, uint, 0644);
 enum {
-       REG_MANUFACTURER_DATA,  	
+       REG_MANUFACTURER_DATA,
 	REG_STATE_OF_HEALTH,
 	REG_TEMPERATURE,
 	REG_VOLTAGE,
@@ -75,7 +75,7 @@
 	REG_CAPACITY,
 	REG_SERIAL_NUMBER,
 	REG_MAX
-};    
+};
 typedef enum {
 	Charger_Type_Battery = 0,
 	Charger_Type_AC,
@@ -177,7 +177,7 @@
 			val->intval =  1;
 		   else if (psy->type == POWER_SUPPLY_TYPE_DOCK_AC&& battery_docking_status)
 			val->intval =  1;
-		   else 
+		   else
 		   	val->intval = 0;
 		break;
 
@@ -262,7 +262,7 @@
 int pad_smbus_read_data(int reg_offset,int byte)
 {
      s32 ret=-EINVAL;
-     int count=0; 
+     int count=0;
      do{
 	    if(byte)
               ret=i2c_smbus_read_byte_data(pad_device->client,pad_data[reg_offset].addr);
@@ -276,7 +276,7 @@
 int pad_smbus_write_data(int reg_offset,int byte, unsigned int value)
 {
      s32 ret=-EINVAL;
-     int count=0; 
+     int count=0;
 
      do{
 	    if(byte){
@@ -315,7 +315,7 @@
 	power_supply_changed(&pad_supply[Charger_Type_Battery]);
 	/* Schedule next poll */
        pad_device->battery_present =!(gpio_get_value(pad_device->gpio_battery_detect));
-	printk("battery_status_poll %u %u \n",BATTERY_POLLING_RATE,pad_device->battery_present);
+	//printk("battery_status_poll %u %u \n",BATTERY_POLLING_RATE,pad_device->battery_present);
 	if(pad_device->battery_present)
 		queue_delayed_work(battery_work_queue, &battery_device->status_poll_work,BATTERY_POLLING_RATE*HZ);
 }
@@ -348,7 +348,7 @@
 void setup_detect_irq(void )
 {
        s32 ret=0;
-	
+
 	pad_device->battery_present=0;
 	pad_device->low_battery_present=0;
 	 tegra_gpio_enable(pad_device->gpio_battery_detect);
@@ -358,7 +358,7 @@
 		pad_device->gpio_battery_detect = -1;
 		goto setup_low_bat_irq;
 	}
-	
+
 	pad_device->irq_battery_detect = gpio_to_irq(pad_device->gpio_battery_detect);
 	if (pad_device->irq_battery_detect < 0) {
 		printk("invalid battery_detect GPIO\n");
@@ -381,7 +381,7 @@
 	 pad_device->battery_present=!(gpio_get_value(pad_device->gpio_battery_detect));
 	printk("setup_irq: battery_present =%x   \n",pad_device->battery_present);
 setup_low_bat_irq:
- 	
+
 	return;
 }
 void setup_low_battery_irq(void )
@@ -529,10 +529,10 @@
 }
 static int pad_get_health(enum power_supply_property psp,
 	union power_supply_propval *val)
-{	
+{
 	if (psp == POWER_SUPPLY_PROP_PRESENT) {
 		val->intval = pad_device->battery_present;
-	}		
+	}
 	else if (psp == POWER_SUPPLY_PROP_HEALTH) {
 		if( pad_device->battery_present)
 			val->intval = POWER_SUPPLY_HEALTH_GOOD;
@@ -566,7 +566,7 @@
 	if (pad_device->smbus_status < 0) {
 		dev_err(&pad_device->client->dev,
 			"%s: i2c read for %d failed\n", __func__, reg_offset);
-		
+
 		if(psp == POWER_SUPPLY_PROP_TEMP && (++pad_device->temp_err<=3) &&(pad_device->old_temperature!=0xFF)){
 			val->intval=pad_device->old_temperature;
 			printk("read battery's tempurate fail use old temperature=%u pad_device->temp_err=%u\n",val->intval,pad_device->temp_err);
@@ -577,11 +577,11 @@
 	}
 	if (psp == POWER_SUPPLY_PROP_VOLTAGE_NOW) {
 		val->intval=pad_device->bat_vol;
-		printk("pad_get_psp voltage_now =%u\n",val->intval );//4
+		//printk("pad_get_psp voltage_now =%u\n",val->intval );//4
 	}
 	if (psp == POWER_SUPPLY_PROP_STATUS) {
 		ret=pad_device->bat_status;
-		static char *status_text[] = {"Unknown", "Charging", "Discharging", "Not charging", "Full"};
+		//static char *status_text[] = {"Unknown", "Charging", "Discharging", "Not charging", "Full"};
 		/* mask the upper byte and then find the actual status */
 		if (!(ret & BATTERY_CHARGING) && (ac_on||battery_docking_status) ){/*DSG*/
 			val->intval = POWER_SUPPLY_STATUS_CHARGING;
@@ -592,9 +592,9 @@
 			val->intval = POWER_SUPPLY_STATUS_FULL;
 		else if (ret & BATTERY_FULL_DISCHARGED)//fd
 			val->intval = POWER_SUPPLY_STATUS_DISCHARGING;
-		else 
+		else
 			val->intval = POWER_SUPPLY_STATUS_NOT_CHARGING;
-		printk("pad_get_psp  val->intval=%s ret=%x\n" ,status_text[val->intval],ret);//4
+		//printk("pad_get_psp  val->intval=%s ret=%x\n" ,status_text[val->intval],ret);//4
 	}else if (psp == POWER_SUPPLY_PROP_TEMP) {
 		ret=pad_device->bat_temp;
 		ret -=TEMP_KELVIN_TO_CELCIUS;
@@ -609,7 +609,7 @@
 			pad_device->temp_err=0;
 
 		pad_device->old_temperature=val->intval = ret;
-		printk("pad_get_psp  batttery temperature=%u\n",val->intval );
+		//printk("pad_get_psp  batttery temperature=%u\n",val->intval );
 	}
 	return 0;
 }
@@ -671,7 +671,7 @@
 
 	pad_device->old_capacity=val->intval;
 	pad_device->cap_err=0;
-	printk("pad_get_capacity val->intval=%u ret=%u\n",val->intval,ret);
+	//printk("pad_get_capacity val->intval=%u ret=%u\n",val->intval,ret);
 	return 0;
 }
 static int pad_get_property(struct power_supply *psy,
@@ -716,12 +716,12 @@
 				"%s: INVALID property psp=%u\n", __func__,psp);
 			return -EINVAL;
 	}
-  
+
 	return 0;
 
 	error:
-		
-	return -EINVAL;	
+
+	return -EINVAL;
 }
 #include "stress_test.c"
 void config_thermal_power(void)
diff -ur stock-kernel/drivers/ril/ril.c linux/drivers/ril/ril.c
--- stock-kernel/drivers/ril/ril.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/drivers/ril/ril.c	2013-02-13 14:47:38.239860002 +0100
@@ -8,7 +8,8 @@
 #include <linux/switch.h>
 #include <linux/uaccess.h>
 #include <linux/workqueue.h>
-#include <../../arch/arm/mach-tegra/include/mach/board-cardhu-misc.h>
+//#include "../../arch/arm/mach-tegra/include/mach/board-cardhu-misc.h"
+#include <mach/board-cardhu-misc.h>
 
 #include "pm-irq.h"
 #include "ril.h"
diff -ur stock-kernel/include/linux/kexec.h linux/include/linux/kexec.h
--- stock-kernel/include/linux/kexec.h	2012-09-13 08:32:35.000000000 +0200
+++ linux/include/linux/kexec.h	2013-03-09 16:34:09.569954959 +0100
@@ -100,6 +100,9 @@
 #define KEXEC_TYPE_DEFAULT 0
 #define KEXEC_TYPE_CRASH   1
 	unsigned int preserve_context : 1;
+#ifdef CONFIG_KEXEC_HARDBOOT
+	unsigned int hardboot : 1;
+#endif
 
 #ifdef ARCH_HAS_KIMAGE_ARCH
 	struct kimage_arch arch;
@@ -165,6 +168,9 @@
 
 #define KEXEC_ON_CRASH		0x00000001
 #define KEXEC_PRESERVE_CONTEXT	0x00000002
+#ifdef CONFIG_KEXEC_HARDBOOT
+#define KEXEC_HARDBOOT         0x00000004
+#endif
 #define KEXEC_ARCH_MASK		0xffff0000
 
 /* These values match the ELF architecture values.
@@ -183,10 +189,14 @@
 #define KEXEC_ARCH_MIPS    ( 8 << 16)
 
 /* List of defined/legal kexec flags */
-#ifndef CONFIG_KEXEC_JUMP
-#define KEXEC_FLAGS    KEXEC_ON_CRASH
-#else
+#if defined(CONFIG_KEXEC_JUMP) && defined(CONFIG_KEXEC_HARDBOOT)
+#define KEXEC_FLAGS    (KEXEC_ON_CRASH | KEXEC_PRESERVE_CONTEXT | KEXEC_HARDBOOT)
+#elif defined(CONFIG_KEXEC_JUMP)
 #define KEXEC_FLAGS    (KEXEC_ON_CRASH | KEXEC_PRESERVE_CONTEXT)
+#elif defined(CONFIG_KEXEC_HARDBOOT)
+#define KEXEC_FLAGS    (KEXEC_ON_CRASH | KEXEC_HARDBOOT)
+#else
+#define KEXEC_FLAGS    (KEXEC_ON_CRASH)
 #endif
 
 #define VMCOREINFO_BYTES           (4096)
diff -ur stock-kernel/kernel/kexec.c linux/kernel/kexec.c
--- stock-kernel/kernel/kexec.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/kernel/kexec.c	2013-03-09 16:39:11.570000841 +0100
@@ -1005,6 +1005,10 @@
 
 		if (flags & KEXEC_PRESERVE_CONTEXT)
 			image->preserve_context = 1;
+#ifdef CONFIG_KEXEC_HARDBOOT
+		if (flags & KEXEC_HARDBOOT)
+			image->hardboot = 1;
+#endif
 		result = machine_kexec_prepare(image);
 		if (result)
 			goto out;
@@ -1537,6 +1541,13 @@
 	} else
 #endif
 	{
+#ifdef CONFIG_KEXEC_HARDBOOT
+	if (kexec_image->hardboot)
+	/* Reboot with the recovery kernel since the boot kernel decompressor may
+	* not support the hardboot jump. */
+		kernel_restart_prepare("recovery");
+	else
+#endif
 		kernel_restart_prepare(NULL);
 		printk(KERN_EMERG "Starting new kernel\n");
 		machine_shutdown();
diff -ur stock-kernel/net/wireless/chan.c linux/net/wireless/chan.c
--- stock-kernel/net/wireless/chan.c	2012-09-13 08:32:35.000000000 +0200
+++ linux/net/wireless/chan.c	2013-01-16 14:17:01.689868924 +0100
@@ -82,9 +82,12 @@
 {
 	struct ieee80211_channel *chan;
 	int result;
+	struct wireless_dev *mon_dev = NULL;
 
-	if (wdev && wdev->iftype == NL80211_IFTYPE_MONITOR)
+	if (wdev && wdev->iftype == NL80211_IFTYPE_MONITOR) {
+		mon_dev = wdev;
 		wdev = NULL;
+	}
 
 	if (wdev) {
 		ASSERT_WDEV_LOCK(wdev);
@@ -131,5 +134,8 @@
 	if (wdev)
 		wdev->channel = chan;
 
+	if (mon_dev)
+		mon_dev->channel = chan;
+
 	return 0;
 }
